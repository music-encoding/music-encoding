<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  NOTICE: Copyright (c) 2017-2023 by the Music Encoding Initiative (MEI) Board (formerly known as "MEI Council").

  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at https://opensource.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema Â© 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->
<?xml-model href="../source/validation/mei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-model href="../source/validation/mei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="../source/validation/mei-customizations.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Music Encoding Initiative Guidelines: <title type="sub">MEI Basic Profile</title></title>
                <respStmt>
                    <resp>Authored by</resp>
                    <name xml:id="JK">Johannes Kepper</name>
                </respStmt>
                <respStmt>
                    <resp>Revisions</resp>
                    <name xml:id="LP">Laurent Pugin</name>
                </respStmt>
                <respStmt>
                    <resp>Revisions</resp>
                    <name xml:id="KR">Klaus Rettinghaus</name>
                </respStmt>
                <respStmt>
                    <resp>In collaboration with</resp>
                    <name>The MEI Community</name>
                </respStmt>
            </titleStmt>
            <publicationStmt>
                <publisher>Music Encoding Initiative (MEI) Board</publisher>
                <availability>
                    <licence target="https://opensource.org/license/ECL-2.0/">Licensed under the Educational Community License version 2.0</licence>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p/>
            </sourceDesc>
        </fileDesc>
        <revisionDesc>
            <change n="1" when="2019-04-04" who="#JK">
                <desc>Initial setup of the ODD.</desc>
            </change>
            <change n="2" when="2019-10-26" who="#JK">
                <desc>Revisions following the discussions on GitHub, and at the Nashville Hackathon.</desc>
            </change>
            <change n="3" from="2023-05-24" to="2023-06-12" who="#LP">
                <desc>Revisions at the MEI Developers Conference, Charlottesville.</desc>
            </change>
            <change n="4" when="2023-08-23" who="#KR">
                <desc>Fixing color attribute and cleanup attribute class references.</desc>
            </change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec ident="mei" start="mei" prefix="mei_" ns="http://www.music-encoding.org/ns/mei">

                <!-- Declare MEI and XLink namespaces for use in Schematron -->
                <constraintSpec ident="set_ns" scheme="schematron" mode="add">
                    <constraint>
                        <sch:ns prefix="mei" uri="http://www.music-encoding.org/ns/mei"/>
                        <sch:ns prefix="xlink" uri="http://www.w3.org/1999/xlink"/>
                    </constraint>
                </constraintSpec>

                <moduleRef key="MEI"/>
                <moduleRef key="MEI.analytical" />
                <moduleRef key="MEI.cmn"
                    except="attacca beamSpan bend bracketSpan meterSig meterSigGrp mRpt2 mSpace oLayer ossia oStaff tupletSpan"/>
                <moduleRef key="MEI.cmnOrnaments"/>
                <moduleRef key="MEI.externalsymbols"/>
                <!--<moduleRef key="MEI.figtable"/>-->
                <moduleRef key="MEI.fingering"/>
                <!--<moduleRef key="MEI.frbr"/>-->
                <moduleRef key="MEI.gestural"/>
                <moduleRef key="MEI.harmony"/>
                <moduleRef key="MEI.header" include="meiHead fileDesc titleStmt pubStmt availability"/>
                <moduleRef key="MEI.lyrics"/>
                <!--<moduleRef key="MEI.msDesc"/>-->
                <moduleRef key="MEI.midi" include="instrDef" />
                <moduleRef key="MEI.namesdates" include="persName" />
                <moduleRef key="MEI.shared" 
                    include="accid arranger artic body caesura chord clef clefGrp composer date dir dynam ending label labelAbbr layer lb lyricist mdiv mei music note ornam pb pgFoot pgHead pubPlace rend respStmt rest sb score scoreDef section space staff staffDef staffGrp symbol syl tempo title "/>
                <moduleRef key="MEI.stringtab"/>
                <!--<moduleRef key="MEI.text"/>-->
                <moduleRef key="MEI.visual"/>

                <classSpec type="atts" ident="att.notationType" module="MEI" mode="delete"/>
                
                <classSpec type="atts" ident="att.accid.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.ambNote.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.anchoredText.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.annot.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.accid.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.arpeg.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.artic.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.attacca.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.barLine.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.beam.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.beamSpan.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.beatRpt.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.bend.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.bracketSpan.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.breath.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.bTrem.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.caesura.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.chord.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.chordDef.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.accid.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.chordMember.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.clef.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.clefGrp.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.cpMark.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.curve.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.custos.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mdiv.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.dir.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.dot.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.dynam.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.ending.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.episema.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.f.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.fermata.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.fing.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.fingGrp.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.fTrem.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.gliss.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.graceGrp.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.grpSym.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.hairpin.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.halfmRpt.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.harm.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.harmonicFunction" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.harpPedal.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.hispanTick.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.instrDef.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.intervalHarmonic" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.intervalMelodic" module="MEI.analytical" mode="delete"/>
                <!-- <classSpec type="atts" ident="att.intervallicDesc" module="MEI.analytical" mode="delete"/> -->
                <classSpec type="atts" ident="att.keyAccid.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.keySig.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.layer.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.layerDef.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.ligature.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.line.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.liquescent.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.lv.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.lyrics.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.measure.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.melodicFunction" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mensur.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.metaMark.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.meterSig.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.meterSigGrp.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.midi.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mNum.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mordent.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mRest.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mRpt.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mRpt2.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.mSpace.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.multiRest.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.multiRpt.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.nc.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.ncGrp.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.neume.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.note.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.octave.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.ornam.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.oriscus.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.ossia.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.pad.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.part.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.parts.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.pb.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.pedal.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.phrase.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.pitchClass" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.plica.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.proport.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.quilisma.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.rdg.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.refrain.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.reh.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.rest.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.sb.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.score.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.scoreDef.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.section.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.slur.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.signifLet.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.solfa" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.sp.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.space.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.staff.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.staffDef.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.staffGrp.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.stageDir.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.stem.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.strophicus.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.syl.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.syllable.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.symbol.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.tempo.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.tie.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.trill.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.tuplet.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.tupletSpan.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.turn.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.verse.anl" module="MEI.analytical" mode="delete"/>
                <classSpec type="atts" ident="att.volta.anl" module="MEI.analytical" mode="delete"/>

                <classSpec type="atts" ident="att.beamedWith" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.beaming.log" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.beamPresent" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.beamRend" module="MEI.cmn" mode="delete"/>
                <!--<classSpec type="atts" ident="att.beamSecondary" module="MEI.cmn" mode="delete"/>-->
                <classSpec type="atts" ident="att.beamSpan.log" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.chord.ges.cmn" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.mNum.log" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.ossia.log" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.rest.log.cmn" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.slurRend" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.space.log.cmn" module="MEI.cmn" mode="delete"/>
                <classSpec type="atts" ident="att.tieRend" module="MEI.cmn" mode="delete"/>
                
                <classSpec type="atts" ident="att.ambitus.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.ambNote.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.anchoredText.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.arpeg.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.articulation.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.barLine.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.beam.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.beatRpt.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.chordDef.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.clef.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.clefGrp.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.curve.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.custos.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.dir.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.dot.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.duration.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.dynam.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.ending.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.graceGrp.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.grpSym.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.halfmRpt.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.harm.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.hispanTick.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.keyAccid.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.keySig.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.layer.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.ligature.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.liquescent.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.lyrics.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.mensur.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.meterSig.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.meterSigGrp.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.midi.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.mNum.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.mordent.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.mRpt.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.mRpt2.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.multiRpt.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.oriscus.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.ossia.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.pad.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.part.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.parts.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.pb.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.plica.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.proport.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.quilisma.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.rdg.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.refrain.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.reh.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.sb.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.scoreDef.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.signifLet.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.staff.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.stem.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.strophicus.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.syl.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.syllable.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.symbol.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.timestamp.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.timestamp2.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.turn.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.verse.ges" module="MEI.gestural" mode="delete"/>
                <classSpec type="atts" ident="att.volta.ges" module="MEI.gestural" mode="delete"/>
                
                <classSpec type="atts" ident="att.refrain.log" module="MEI.lyrics" mode="delete"/>
                <classSpec type="atts" ident="att.verse.log" module="MEI.lyrics" mode="delete"/>
                <classSpec type="atts" ident="att.volta.log" module="MEI.lyrics" mode="delete"/>
                
                <classSpec type="atts" ident="att.ambitus.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.authorized" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.barring" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.bibl" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.classed" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.clefGrp.log" module="MEI.shared" mode="delete"/>
                <!--<classSpec type="atts" ident="att.color" module="MEI.shared" mode="delete"/>-->
                <classSpec type="atts" ident="att.coloration" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.distances" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.duration.default" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.enclosingChars" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.endings" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.evidence" module="MEI.shared" mode="delete"/>
                <!--<classSpec type="atts" ident="att.extender" module="MEI.shared" mode="delete"/>-->
                <classSpec type="atts" ident="att.fermataPresent" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.filing" module="MEI.shared" mode="delete"/>
                <!--<classSpec type="atts" ident="att.labelled" module="MEI.shared" mode="delete"/>-->
                <classSpec type="atts" ident="att.layer.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.linking" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.lyricStyle" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.metadataPointing" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.notationStyle" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.noteHeads" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.octaveDefault" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.pages" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.part.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.partIdent" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.parts.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.pointing" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.responsibility" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.score.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.scoreDef.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.source" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.spacing" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.staff.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.staffGrp.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.staffItems" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.staffLoc" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.staffLoc.pitched" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.symbol.log" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.systems" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.targetEval" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.textStyle" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.tiePresent" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.tupletPresent" module="MEI.shared" mode="delete"/>
                <!--<classSpec type="atts" ident="att.typed" module="MEI.shared" mode="delete"/>-->
                <!--<classSpec type="atts" ident="att.typography" module="MEI.shared" mode="delete"/>-->
                <classSpec type="atts" ident="att.verticalGroup" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.visibility" module="MEI.shared" mode="delete"/>
                <!--<classSpec type="atts" ident="att.visualOffset" module="MEI.shared" mode="delete"/>-->
                <!--<classSpec type="atts" ident="att.visualOffset.ho" module="MEI.shared" mode="delete"/>-->
                <classSpec type="atts" ident="att.visualOffset.to" module="MEI.shared" mode="delete"/>
                <!--<classSpec type="atts" ident="att.visualOffset.vo" module="MEI.shared" mode="delete"/>-->
                <!--<classSpec type="atts" ident="att.visualOffset2" module="MEI.shared" mode="delete"/>-->
                <!--<classSpec type="atts" ident="att.visualOffset2.ho" module="MEI.shared" mode="delete"/>-->
                <classSpec type="atts" ident="att.visualOffset2.to" module="MEI.shared" mode="delete"/>
                <!--<classSpec type="atts" ident="att.visualOffset2.vo" module="MEI.shared" mode="delete"/>-->
                <classSpec type="atts" ident="att.xy" module="MEI.shared" mode="delete"/>
                <classSpec type="atts" ident="att.xy2" module="MEI.shared" mode="delete"/>

                <!--<classSpec type="atts" ident="att.accid.vis" module="MEI.visual" mode="delete"/>-->
                <classSpec type="atts" ident="att.ambitus.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.ambNote.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.beaming.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.barLine.vis" module="MEI.visual" mode="delete"/>
                <!--<classSpec type="atts" ident="att.chord.vis" module="MEI.visual" mode="delete"/>-->
                <classSpec type="atts" ident="att.chordDef.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.chordMember.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.cleffing.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.clefGrp.vis" module="MEI.visual" mode="delete"/>
                <!--<classSpec type="atts" ident="att.fermata.vis" module="MEI.visual" mode="delete"/>-->
                <classSpec type="atts" ident="att.fingGrp.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.fTrem.vis" module="MEI.visual" mode="delete"/>
                <!--<classSpec type="atts" ident="att.harm.vis" module="MEI.visual" mode="delete"/>-->
                <classSpec type="atts" ident="att.instrDef.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.keySigDefault.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.mdiv.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.measure.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.meterSigDefault.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.meterSigGrp.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.ossia.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.pad.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.part.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.parts.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.rdg.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.score.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.scoreDef.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.staffDef.vis" module="MEI.visual" mode="delete"/>
                <classSpec type="atts" ident="att.syllable.vis" module="MEI.visual" mode="delete"/>

                <!--<classSpec type="atts" ident="att.arpeg.vis" module="MEI.visual" mode="change">
                    <desc>Visual domain attributes.</desc>
                    <classes mode="replace">
                        <memberOf key="att.altSym" mode="add"></memberOf>
                        <memberOf key="att.color" mode="add"></memberOf>
                        <memberOf key="att.extSym" mode="add"></memberOf>
                        <memberOf key="att.lineRend.base" mode="add"></memberOf>
                        <memberOf key="att.typography" mode="add"></memberOf>
                        <memberOf key="att.visualOffset" mode="add"></memberOf>
                        <memberOf key="att.xy" mode="add"></memberOf>
                    </classes>
                    <attList org="group">
                        <attDef ident="arrow" mode="add" predeclare="false" usage="opt">
                            <desc>Indicates if an arrowhead is to be drawn as part of the arpeggiation symbol.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.BOOLEAN"></rng:ref>
                            </datatype>
                        </attDef>
                        <!-\-<attDef ident="arrow.shape" mode="add" predeclare="false" usage="opt">
                            <desc>Symbol rendered at end of the line.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.LINESTARTENDSYMBOL"></rng:ref>
                            </datatype>
                        </attDef>
                        <attDef ident="arrow.size" mode="add" predeclare="false" usage="opt">
                            <desc>Holds the relative size of the arrow symbol.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.FONTSIZESCALE"></rng:ref>
                            </datatype>
                        </attDef>
                        <attDef ident="arrow.color" mode="add" predeclare="false" usage="opt">
                            <desc>Captures the overall color of the arrow.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.COLOR"></rng:ref>
                            </datatype>
                        </attDef>
                        <attDef ident="arrow.fillcolor" mode="add" predeclare="false" usage="opt">
                            <desc>Captures the fill color of the arrow if different from the line color.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.COLOR"></rng:ref>
                            </datatype>
                        </attDef>-\->
                    </attList>
                </classSpec>-->

                <classSpec type="atts" ident="att.common" module="MEI.shared" mode="change">
                    <desc>Attributes common to many elements.</desc>
                    <classes mode="replace">
                        <memberOf key="att.id" mode="add"/>
                        <memberOf key="att.labelled" mode="add"/>
                        <!--<memberOf key="att.linking" mode="add"/>-->
                        <!--<memberOf key="att.nNumberLike" mode="add"/>-->
                        <!--<memberOf key="att.responsibility" mode="add"/>-->
                        <memberOf key="att.typed" mode="add"/>
                    </classes>
                </classSpec>

                <classSpec type="atts" ident="att.curvature" module="MEI.shared" mode="change">
                    <desc>Attributes that describe curvature.</desc>
                    <attList org="group">
                        <!--<attDef ident="bezier" mode="add" predeclare="false" usage="opt">
                            <desc>Records the placement of Bezier control points as a series of pairs of space-separated
                                values; e.g., 19 45 -32 118.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:list>
                                    <rng:oneOrMore>
                                        <rng:data type="decimal"></rng:data>
                                        <rng:data type="decimal"></rng:data>
                                    </rng:oneOrMore>
                                </rng:list>
                            </datatype>
                        </attDef>-->
                        <!--<attDef ident="bulge" mode="add" predeclare="false" usage="opt">
                            <desc>Describes a curve as one or more pairs of values with respect to an imaginary line
                                connecting the starting and ending points of the curve. The first value captures a
                                distance to the left (positive value) or right (negative value) of the line, expressed in
                                virtual units. The second value of each pair represents a point along the line, expressed
                                as a percentage of the line's length. N.B. An MEI virtual unit (VU) is half the distance
                                between adjacent staff lines.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:list>
                                    <rng:oneOrMore>
                                        <rng:data type="decimal"></rng:data>
                                        <rng:ref name="data.PERCENT"></rng:ref>
                                    </rng:oneOrMore>
                                </rng:list>
                            </datatype>
                        </attDef>-->
                        <attDef ident="curvedir" mode="add" predeclare="false"
                            usage="opt">
                            <desc>Describes a curve with a generic term indicating the direction of curvature.</desc>
                            <valList mode="add" type="closed">
                                <valItem ident="above" mode="add">
                                    <desc>Upward curve.</desc>
                                </valItem>
                                <valItem ident="below" mode="add">
                                    <desc>Downward curve.</desc>
                                </valItem>
                                <valItem ident="mixed" mode="add">
                                    <desc>A "meandering" curve, both above and below the items it pertains to.</desc>
                                </valItem>
                            </valList>
                        </attDef>
                    </attList>
                </classSpec>

                <classSpec ident="att.event" module="MEI.shared" type="atts" mode="change">
                    <desc>Attributes that apply to all written events, e.g., note, chord, rest, etc.</desc>
                    <classes mode="replace">
                        <memberOf key="att.alignment" mode="add"/>
                        <memberOf key="att.layerIdent" mode="add"/>
                        <memberOf key="att.staffIdent" mode="add"/>
                        <!--<memberOf key="att.timestamp.ges" mode="add"/>-->
                        <!--<memberOf key="att.timestamp.log" mode="add"/>-->
                    </classes>
                </classSpec>

                <classSpec ident="att.stems" module="MEI.shared" type="atts" mode="replace">
                    <desc>Attributes that describe the properties of stemmed features; that is, chords and notes.</desc>
                    <classes mode="replace">
                        <!--<memberOf key="att.stems.cmn" mode="add"/>-->
                    </classes>
                    <attList org="group">
                        <attDef ident="stem.dir" mode="add" usage="opt">
                            <desc>Describes the direction of a stem.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.STEMDIRECTION"/>
                            </datatype>
                        </attDef>
                        <attDef ident="stem.len" mode="add" usage="opt">
                            <desc>Encodes the stem length.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.MEASUREMENTUNSIGNED"/>
                            </datatype>
                        </attDef>
                        <attDef ident="stem.mod" mode="add" usage="opt">
                            <desc>Encodes any stem "modifiers"; that is, symbols rendered on the stem, such as tremolo
                                or Sprechstimme indicators.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.STEMMODIFIER"/>
                            </datatype>
                        </attDef>
                        <!--<attDef ident="stem.pos" mode="add" predeclare="false" usage="opt">
                            <desc>Records the position of the stem in relation to the note head(s).</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="data.STEMPOSITION"></rng:ref>
                            </datatype>
                        </attDef>-->
                        <!--<attDef ident="stem.visible" mode="add" predeclare="false" usage="opt">
                            <desc>Determines whether a stem should be displayed.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="data.BOOLEAN"></rng:ref>
                            </datatype>
                        </attDef>-->
                        <!--<attDef ident="stem.x" mode="add" predeclare="false" usage="opt">
                            <desc>Records the output x coordinate of the stem's attachment point.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:data xmlns:rng="http://relaxng.org/ns/structure/1.0" type="decimal"></rng:data>
                            </datatype>
                        </attDef>-->
                        <!--<attDef ident="stem.y" mode="add" predeclare="false" usage="opt">
                            <desc>Records the output y coordinate of the stem's attachment point.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:data xmlns:rng="http://relaxng.org/ns/structure/1.0" type="decimal"></rng:data>
                            </datatype>
                        </attDef>-->
                    </attList>
                </classSpec>

                <classSpec ident="att.meterConformance.bar" module="MEI.shared" type="atts" mode="replace">
                    <desc>Attributes that provide information about a measure's conformance to the prevailing
                        meter.</desc>
                    <attList>
                        <attDef ident="metcon" usage="opt">
                            <desc>Indicates the relationship between the content of a measure and the prevailing
                                meter.</desc>
                            <datatype>
                                <rng:ref name="data.BOOLEAN"/>
                            </datatype>
                        </attDef>
                        <!--<attDef ident="control" usage="opt">
                            <desc>Indicates whether or not a bar line is "controlling"; that is, if it indicates a point
                                of alignment across all the parts. Bar lines within a score are usually controlling; that
                                is, they "line up". Bar lines within parts may or may not be controlling. When applied to
                                <gi scheme="MEI">measure</gi>, this attribute indicates the nature of the right barline
                                but not the left.</desc>
                            <datatype>
                                <rng:ref name="data.BOOLEAN"/>
                            </datatype>
                        </attDef>-->
                    </attList>
                </classSpec>

                <classSpec ident="att.basic" module="MEI.shared" type="atts" mode="replace">
                    <desc>Attributes that form the basis of the att.common class.</desc>
                    <classes>
                        <memberOf key="att.id"/>
                    </classes>
                </classSpec>

                <classSpec ident="att.note.ges" module="MEI.gestural" type="atts" mode="replace">
                    <desc>Gestural domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.accidental.ges"/>-->
                        <!--<memberOf key="att.articulation.ges"/>-->
                        <!--<memberOf key="att.duration.ges"/>-->
                        <memberOf key="att.instrumentIdent"/>
                        <memberOf key="att.midiVelocity"/>
                        <memberOf key="att.note.ges.mensural"/>
                        <memberOf key="att.stringtab"/>
                    </classes>

                    <attList>
                        <attDef ident="oct.ges" usage="opt">
                            <desc>Records performed octave information that differs from the written value.</desc>
                            <datatype>
                                <rng:ref name="data.OCTAVE"/>
                            </datatype>
                        </attDef>
                        <attDef ident="pname.ges" usage="opt">
                            <desc>Contains a performed pitch name that differs from the written value.</desc>
                            <datatype>
                                <rng:ref name="data.PITCHNAME.GESTURAL"/>
                            </datatype>
                        </attDef>
                    </attList>
                </classSpec>
                
                <classSpec ident="att.rest.log" module="MEI.shared" type="atts" mode="change">
                    <desc xml:lang="en">Logical domain attributes.</desc>
                    <classes>
                        <memberOf key="att.augmentDots"/>
                        <memberOf key="att.cue"/>
                        <memberOf key="att.duration.log"/><!-- changed from att.restduration.log -->
                        <memberOf key="att.event"/>
                        <!--<memberOf key="att.rest.log.cmn"/>-->
                    </classes>
                </classSpec>

                <classSpec ident="att.rest.vis" module="MEI.visual" type="atts" mode="change">
                    <desc>Visual domain attributes.</desc>
                    <classes mode="replace">
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.enclosingChars"/>
                        <memberOf key="att.rest.vis.cmn"/>
                        <!--<memberOf key="att.rest.vis.mensural"/>-->
                        <memberOf key="att.staffLoc"/>
                        <memberOf key="att.staffLoc.pitched"/>
                        <!--<memberOf key="att.typography"/>-->
                        <memberOf key="att.visualOffset"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>

                <classSpec ident="att.rest.ges" module="MEI.gestural" type="atts" mode="change">
                    <desc>Gestural domain attributes.</desc>
                    <classes mode="replace">
                        <!--<memberOf key="att.duration.ges"/>-->
                        <memberOf key="att.instrumentIdent"/>
                        <!--<memberOf key="att.rest.ges.mensural"/>-->
                    </classes>
                </classSpec>

                <classSpec ident="att.chord.log" module="MEI.shared" type="atts" mode="change">
                    <desc>Logical domain attributes for chord. The artic, dots, and dur attributes encode the written
                        articulations, augmentation dots, and duration values. The beam, fermata, lv, slur, syl, tie,
                        and tuplet attributes may be used to indicate the attachment of these things to this chord. If
                        visual information about these things needs to be recorded, then either the elements
                        corresponding to these attributes or the attributes available in the att.vis.chord class should
                        be employed.</desc>
                    <classes mode="replace">
                        <!--<memberOf key="att.articulation"/>-->
                        <memberOf key="att.augmentDots"/>
                        <memberOf key="att.chord.log.cmn"/>
                        <memberOf key="att.cue"/>
                        <memberOf key="att.duration.log"/>
                        <memberOf key="att.event"/>
                        <!--<memberOf key="att.sylText"/>-->
                    </classes>
                </classSpec>

                <classSpec ident="att.chord.vis" module="MEI.visual" type="atts" mode="change">
                    <desc>Visual domain attributes for chord. The slur, slur.dir, slur.rend, tie, tie.dir, and tie.rend
                        attributes here are syntactic sugar for these attributes on each of the chord's individual
                        notes. The values here apply to all the notes in the chord. If some notes are slurred or tied
                        while others aren't, then the individual note attributes must be used.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.enclosingChars"/>
                        <memberOf key="att.extSym"/>
                        <memberOf key="att.stems"/>
                        <!--<memberOf key="att.typography"/>-->
                        <!--<memberOf key="att.visibility"/>-->
                        <memberOf key="att.visualOffset.ho"/>
                        <memberOf key="att.visualOffset.to"/>
                        <!--<memberOf key="att.xy"/>-->
                        <memberOf key="att.chord.vis.cmn"/>
                    </classes>
                </classSpec>

                <classSpec ident="att.curvature" module="MEI.shared" type="atts" mode="replace">
                    <desc>Attributes that describe curvature.</desc>
                    <attList>
                        <attDef ident="curvedir" usage="opt">
                            <desc>Describes a curve with a generic term indicating the direction of curvature.</desc>
                            <valList type="closed">
                                <valItem ident="above">
                                    <desc>Upward curve.</desc>
                                </valItem>
                                <valItem ident="below">
                                    <desc>Downward curve.</desc>
                                </valItem>
                                <valItem ident="mixed">
                                    <desc>A "meandering" curve, both above and below the items it pertains to.</desc>
                                </valItem>
                            </valList>
                        </attDef>
                    </attList>
                </classSpec>

                <classSpec ident="att.lang" module="MEI.shared" type="atts" mode="replace">
                    <desc>Language attributes common to text elements.</desc>
                    <attList org="group">

                        <attDef ident="xml:lang" mode="add" predeclare="false"
                            usage="opt">
                            <desc>Identifies the language of the element's content. The values for this attribute are
                                language 'tags' as defined in BCP 47. All language tags that make use of private use
                                sub-tags must be documented in a corresponding language element in the MEI header whose
                                id attribute is the same as the language tag's value.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:data type="language"/>
                            </datatype>
                        </attDef>
                        <!--<attDef ident="translit" mode="add" predeclare="false" usage="opt">
                            <desc>Specifies the transliteration technique used.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:data type="NMTOKEN"></rng:data>
                            </datatype>
                            <remarks>
                                <p part="N">There is no standard list of transliteration schemes.</p>
                            </remarks>
                        </attDef>-->
                    </attList>
                    <remarks>
                        <p part="N">BCP 47 is described at <ref target="https://tools.ietf.org/html/bcp47"
                                >https://tools.ietf.org/html/bcp47</ref>. The IANA Subtag Registry, from which BCP 47
                            language tags are constructed, may be found at <ref
                                target="www.iana.org/assignments/language-subtag-registry"
                                >www.iana.org/assignments/language-subtag-registry</ref>. A tool for locating subtags
                            and validating language tags is available at <ref
                                target="https://r12a.github.io/apps/subtags"
                            >https://r12a.github.io/apps/subtags</ref>.</p>
                    </remarks>
                </classSpec>
                
                
                <classSpec ident="att.accid.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.enclosingChars"/>
                        <memberOf key="att.extSym"/>
                        <!--<memberOf key="att.placementOnStaff"/>-->
                        <!--<memberOf key="att.placementRelEvent"/>-->
                        <!--<memberOf key="att.staffLoc"/>-->
                        <!--<memberOf key="att.staffLoc.pitched"/>-->
                        <!--<memberOf key="att.typography"/>-->
                        <memberOf key="att.visualOffset.ho"/>
                        <memberOf key="att.visualOffset.vo"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>    
             
             
                <classSpec ident="att.artic.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.enclosingChars"/>
                        <memberOf key="att.extSym"/>
                        <!--<memberOf key="att.placementOnStaff"/>-->
                        <memberOf key="att.placementRelEvent"/>
                        <!--<memberOf key="att.staffLoc"/>-->
                        <!--<memberOf key="att.staffLoc.pitched"/>-->
                        <!--<memberOf key="att.typography"/>-->
                        <memberOf key="att.visualOffset"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>
                
                
                <classSpec ident="att.beatRpt.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.expandable"/>
                        <memberOf key="att.extSym"/>
                        <!--<memberOf key="att.typography"/>-->
                    </classes>
                </classSpec>
                

                <classSpec ident="att.breath.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.extSym"/>
                        <!--<memberOf key="att.placementRelStaff"/>-->
                        <!--<memberOf key="att.staffLoc"/>-->
                        <!--<memberOf key="att.staffLoc.pitched"/>-->
                        <!--<memberOf key="att.typography"/>-->
                        <memberOf key="att.visualOffset"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>
                
                
                <classSpec ident="att.caesura.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.extSym"/>
                        <!--<memberOf key="att.placementRelStaff"/>-->
                        <!--<memberOf key="att.staffLoc"/>-->
                        <!--<memberOf key="att.staffLoc.pitched"/>-->
                        <!--<memberOf key="att.typography"/>-->
                        <memberOf key="att.visualOffset"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>
                
                
                <classSpec ident="att.fermata.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <!--<memberOf key="att.enclosingChars"/>-->
                        <memberOf key="att.extSym"/>
                        <memberOf key="att.placementRelStaff"/>
                        <!--<memberOf key="att.typography"/>-->
                        <memberOf key="att.visualOffset"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>
                
                
                <classSpec ident="att.harm.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <memberOf key="att.extender"/>
                        <memberOf key="att.placementRelStaff"/>
                        <memberOf key="att.visualOffset"/>
                        <memberOf key="att.visualOffset2.ho"/>
                        <memberOf key="att.visualOffset2.to"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>
                
                
                <classSpec ident="att.symbol.vis" module="MEI.visual" type="atts" mode="change">
                    <desc xml:lang="en">Visual domain attributes.</desc>
                    <classes>
                        <!--<memberOf key="att.altSym"/>-->
                        <memberOf key="att.color"/>
                        <memberOf key="att.extSym"/>
                        <memberOf key="att.scalable"/>
                        <!--<memberOf key="att.typography"/>-->
                        <memberOf key="att.visualOffset"/>
                        <!--<memberOf key="att.xy"/>-->
                    </classes>
                </classSpec>
                

                <!-- re-allow @place on fermata -->
                <elementSpec ident="fermata" module="MEI.cmn" mode="change">
                    <desc>An indication placed over a note or rest to indicate that it should be held longer than its
                        written value. May also occur over a bar line to indicate the end of a phrase or section.
                        Sometimes called a 'hold' or 'pause'.</desc>
                    <classes mode="replace">
                        <memberOf key="att.common"/>
                        <memberOf key="att.facsimile"/>
                        <memberOf key="att.fermata.log"/>
                        <memberOf key="att.fermata.vis"/>
                        <!--<memberOf key="att.fermata.ges"/>-->
                        <!--<memberOf key="att.fermata.anl"/>-->
                        <memberOf key="model.controlEventLike.cmn"/>
                        <memberOf key="att.placement" mode="add"/>
                    </classes>
                    <content autoPrefix="true">
                        <rng:empty/>
                    </content>
                    <constraintSpec ident="fermata_start-type_attributes_required" scheme="schematron">
                        <constraint>
                            <sch:rule context="mei:fermata">
                                <sch:assert test="@startid or @tstamp or @tstamp.ges or @tstamp.real">Must have one of
                                    the attributes: startid, tstamp, tstamp.ges or tstamp.real.</sch:assert>
                            </sch:rule>
                        </constraint>
                    </constraintSpec>
                    <remarks>
                        <p part="N">The <att scheme="TEI">shape</att> attribute may be used to record whether the
                            fermata is curved, square, or triangular, while <att scheme="TEI">form</att> may be used to
                            capture whether the fermata is "upright", i.e., has the curve or bracket above the dot, or
                            inverted, i.e., has the curve or bracket below the dot. Other visual forms of a fermata may
                            be indicated via the <att scheme="TEI">altsym</att> attribute. The starting point of the
                            fermata may be indicated by either a <att scheme="TEI">startid</att>, <att scheme="TEI"
                                >tstamp</att>, <att scheme="TEI">tstamp.ges</att>, or <att scheme="TEI"
                                >tstamp.real</att> attribute. It is a semantic error not to specify a starting point
                            attribute.</p>
                    </remarks>
                </elementSpec>
                
                <!-- re-allow @n on selected elements -->
                <elementSpec ident="measure" module="MEI.cmn" mode="change">
                    <desc>Unit of musical time consisting of a fixed number of note values of a given type, as
                        determined by the prevailing meter, and delimited in musical notation by bar lines.</desc>
                    <classes mode="replace">
                        <memberOf key="att.common"/>
                        <memberOf key="att.facsimile"/>
                        <!--<memberOf key="att.metadataPointing"/>-->
                        <memberOf key="att.pointing"/>
                        <memberOf key="att.measure.anl"/>
                        <memberOf key="att.measure.ges"/>
                        <memberOf key="att.measure.log"/>
                        <!--<memberOf key="att.measure.vis"/>-->
                        <memberOf key="att.targetEval"/>
                        <memberOf key="model.measureLike"/>
                        <memberOf key="att.nNumberLike" mode="add"/>
                    </classes>
                    <content>
                        <rng:optional>
                            <rng:ref name="mNum"/>
                        </rng:optional>
                        <rng:zeroOrMore>
                            <rng:choice>
                                <rng:ref name="model.annotLike"/>
                                <rng:ref name="model.appLike"/>
                                <rng:ref name="model.editLike"/>
                                <rng:ref name="model.graphicPrimitiveLike"/>
                                <rng:ref name="model.measurePart"/>
                                <rng:ref name="model.milestoneLike.music"/>
                                <rng:ref name="model.relationLike"/>
                                <!--<rng:ref name="model.staffDefLike"/>-->
                                <rng:ref name="model.transcriptionLike"/>
                            </rng:choice>
                        </rng:zeroOrMore>
                    </content>
                    <remarks>
                        <p>In MEI, the <gi scheme="MEI">measure</gi> element is a grouping mechanism for events and
                            control events. Pointing attributes make it possible to connect this element to other
                            internal or external entities, such as media objects or annotations. The <att>width</att>
                            attribute may be used to capture the width of the measure for interchange with music
                            printing systems that utilize this information for printing.</p>
                    </remarks>
                </elementSpec>                
                
                <elementSpec ident="verse" module="MEI.lyrics" mode="change">
                    <desc xml:lang="en">Division of a poem or song lyrics, sometimes having a fixed length, meter or rhyme scheme; a stanza.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="att.verse.vis"/>
                        <memberOf key="model.verseLike"/>
                        <memberOf key="att.nNumberLike" mode="add"/>
                    </classes>
                    <content>
                        <rng:zeroOrMore>
                            <rng:ref name="label"/>
                        </rng:zeroOrMore>
                        <rng:zeroOrMore>
                            <rng:ref name="labelAbbr"/>
                        </rng:zeroOrMore>
                        <rng:oneOrMore>
                            <rng:choice>
                                <rng:ref name="volta"/>
                                <rng:ref name="model.sylLike"/>
                            </rng:choice>
                        </rng:oneOrMore>
                    </content>
                </elementSpec>
                
                <classSpec ident="att.meiVersion" module="MEI.shared" type="atts" mode="change">
                    <attList>
                        <attDef ident="meiversion" usage="req" mode="change">
                            <valList type="closed" mode="change">
                                <valItem ident="5.0+anyStart" mode="delete"/>
                                <valItem ident="5.0+CMN" mode="delete"/>
                                <valItem ident="5.0+Mensural" mode="delete"/>
                                <valItem ident="5.0+Neumes" mode="delete"/>
                            </valList>
                        </attDef>
                    </attList>
                </classSpec>
                
                <!-- allow @meiversion on mei element only -->
                <elementSpec ident="meiHead" module="MEI.header" mode="change">
                    <desc>(MEI header) â Supplies the descriptive and declarative metadata prefixed to every
                        MEI-conformant text.</desc>
                    <classes mode="replace">
                        <memberOf key="att.basic"/>
                        <!--<memberOf key="att.bibl"/>-->
                        <memberOf key="att.labelled"/>
                        <memberOf key="att.lang"/>
                        <!--<memberOf key="att.meiVersion"/>-->
                        <!--<memberOf key="att.responsibility"/>-->
                        <memberOf key="model.startLike.header"/>
                    </classes>
                    <content>
                        <rng:ref name="fileDesc"/>
                    </content>
                    <remarks>
                        <p part="N">For MEI Basic, an MEI header may contain a fileDesc element only.</p>
                    </remarks>
                </elementSpec>
                <elementSpec ident="music" module="MEI.shared" mode="change">
                    <desc>Contains a single musical text of any kind, whether unitary or composite, for example, an etude, opera, song cycle, symphony, or anthology of piano solos.</desc>
                    <classes mode="replace">
                        <memberOf key="att.common"/>
                        <!--<memberOf key="att.meiVersion"/>-->
                        <!--<memberOf key="att.metadataPointing"/>-->
                    </classes>
                    <content>
                        <rng:zeroOrMore>
                            <rng:ref name="model.resourceLike" />
                        </rng:zeroOrMore>
                        <rng:ref name="macro.musicPart" />
                    </content>
                    <constraintSpec ident="check_controlEventLinking" scheme="schematron">
                        <constraint>
                            <sch:rule context="mei:*[@tstamp]">
                                <sch:assert test="not(@startid)">An element with @tstamp may not have @startid as well (and vice versa).</sch:assert>
                            </sch:rule>
                            <sch:rule context="mei:*[@tstamp2]">
                                <sch:assert test="not(@endid)">An element with @tstamp2 may not have @endid as well (and vice versa).</sch:assert>
                            </sch:rule>
                        </constraint>
                    </constraintSpec>
                </elementSpec>
                
                <!-- re-introduce @corresp on fileDesc to allow pointing to more complete MEI files -->
                <elementSpec ident="fileDesc" module="MEI.header" mode="change">
                    <desc>(file description) â Contains a full bibliographic description of the MEI file.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <!--<memberOf key="att.bibl"/>-->
                    </classes>
                    <content>
                        <rng:ref name="titleStmt"/>
                        <rng:ref name="pubStmt" />
                    </content>
                    <attList org="group">
                        <attDef ident="corresp" usage="opt" mode="add">
                            <desc>Used to point to other elements that correspond to this one in a generic fashion.</desc>
                            <datatype maxOccurs="unbounded" minOccurs="1">
                                <rng:ref name="data.URI" />
                            </datatype>
                            <constraintSpec ident="check_correspTarget" scheme="schematron">
                                <constraint>
                                    <sch:rule context="@corresp">
                                        <sch:assert role="warning" test="not(normalize-space(.) eq '')">@corresp attribute should have content.</sch:assert>
                                    </sch:rule>
                                </constraint>
                            </constraintSpec>
                        </attDef>
                    </attList>
                    <remarks>
                        <p part="N">The @corresp attribute on fileDesc may point to a more complete version of this content in a less restricted version of MEI.</p>
                    </remarks>
                    <remarks>
                        <p part="N">This element is modelled on elements in the Text Encoding Initiative (TEI) and Encoded Archival Description (EAD) standards.</p>
                    </remarks>
                </elementSpec>
                
                <!-- dis-allow date element everywhere (will be allowed specifically only inside pubStmt) -->
                <elementSpec ident="date" module="MEI.shared" mode="change">
                    <desc>A string identifying a point in time or the time period between two such points.</desc>
                    <classes mode="replace">
                        <memberOf key="att.common"/>
                        <!--<memberOf key="att.bibl"/>-->
                        <memberOf key="att.calendared"/>
                        <memberOf key="att.datable"/>
                        <memberOf key="att.edit"/>
                        <memberOf key="att.facsimile"/>
                        <memberOf key="att.lang"/>
                        <!--<memberOf key="model.dateLike"/>-->
                    </classes>
                    <content>
                        <rng:zeroOrMore>
                            <rng:choice>
                                <rng:text/>
                                <rng:ref name="model.textPhraseLike" />
                            </rng:choice>
                        </rng:zeroOrMore>
                    </content>
                    <remarks>
                        <p part="N">This element is modelled on elements in the Text Encoding Initiative (TEI) and Encoded Archival Description (EAD) standards.</p>
                    </remarks>
                </elementSpec>
                
                <!-- restrict content on pubStmt -->
                <elementSpec ident="pubStmt" module="MEI.header" mode="change">
                    <desc>(publication statement) â Container for information regarding the publication or distribution of a bibliographic item, including the publisher's name and address, the date of publication, and other relevant details.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <!--<memberOf key="att.bibl"/>-->
                    </classes>
                    <content>
                        <rng:optional>
                            <rng:ref name="publisher"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="pubPlace"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="date"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="availability"/>
                        </rng:optional>
                    </content>
                    <remarks>
                        <p part="N">This element is modelled on an element in the Text Encoding Initiative (TEI) standard. 
                            In MEI Basic, it may contain only publisher, publishing place, date and availability information, in that order.</p>
                    </remarks>
                </elementSpec>
                
                <!-- re-allow @n on mdiv -->
                <elementSpec ident="mdiv" module="MEI.shared" mode="change">
                    <desc>(musical division) â Contains a subdivision of the body of a musical text.</desc>
                    <classes mode="replace">
                        <memberOf key="att.common"/>
                        <!--<memberOf key="att.facsimile"/>-->
                        <!--<memberOf key="att.metadataPointing"/>-->
                        <!--<memberOf key="att.mdiv.anl"/>-->
                        <memberOf key="att.mdiv.ges"/>
                        <!--<memberOf key="att.mdiv.log"/>-->
                        <!--<memberOf key="att.mdiv.vis"/>-->
                        <memberOf key="model.mdivLike"/>
                    </classes>
                    <content>
                        <rng:choice>
                            <rng:ref name="model.scoreLike" />
                            <rng:zeroOrMore>
                                <rng:ref name="model.mdivLike" />
                            </rng:zeroOrMore>
                        </rng:choice>
                    </content>
                    <attList org="group">
                        <attDef ident="n" usage="opt">
                            <desc>Provides a number-like designation that indicates an element's position in a sequence of similar elements. May not contain space characters.</desc>
                            <datatype maxOccurs="1" minOccurs="1">
                                <rng:ref name="data.WORD" />
                            </datatype>
                        </attDef>
                    </attList>
                    <remarks>
                        <p part="N">The <gi scheme="MEI">mdiv</gi> element may be recursively nested in
                            order to represent music which exhibits this kind of structure. For example, 
                            an opera is normally divided into acts, which are in turn divided into scenes.</p>
                    </remarks>
                </elementSpec>
                
                <!-- re-allow @key.sig and @meter.*, remove some childs -->
                <elementSpec ident="scoreDef" module="MEI.shared" mode="change">
                    <desc>(score definition) â Container for score meta-information.</desc>
                    <classes mode="replace">
                        <memberOf key="att.common"/>
                        <!--<memberOf key="att.scoreDef.log"/>-->
                        <!--<memberOf key="att.scoreDef.vis"/>-->
                        <!--<memberOf key="att.scoreDef.ges"/>-->
                        <!--<memberOf key="att.scoreDef.anl"/>-->
                        <memberOf key="model.scoreDefLike"/>
                        
                        <memberOf key="att.keySigDefault.log" mode="add"/>
                        <memberOf key="att.meterSigDefault.log" mode="add"/>
                    </classes>
                    <content>
                        <!--<rng:optional>
                            <rng:ref name="model.chordTableLike"/>
                        </rng:optional>-->
                        <rng:optional>
                            <rng:ref name="model.symbolTableLike"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="model.keySigLike"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="model.meterSigLike"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="pgHead"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="pgFoot"/>
                        </rng:optional>
                        <rng:optional>
                            <rng:ref name="instrGrp"/>
                        </rng:optional>
                        <rng:choice>
                            <rng:optional>
                                <rng:ref name="model.staffGrpLike"/>
                            </rng:optional>
                        </rng:choice>
                        <!--<rng:zeroOrMore>
                            <rng:ref name="grpSym"/>
                        </rng:zeroOrMore>-->
                        <!--<rng:optional>
                            <rng:ref name="ambitus"/>
                        </rng:optional>-->
                    </content>
                </elementSpec>
                
                <!-- disallow grpSym children -->
                <elementSpec ident="staffGrp" module="MEI.shared" mode="change">
                    <desc>(staff group) â A group of bracketed or braced staves.</desc>
                    <classes>
                        <memberOf key="att.common"/>
                        <memberOf key="att.facsimile"/>
                        <!--<memberOf key="att.metadataPointing"/>-->
                        <!--<memberOf key="att.staffGrp.log"/>-->
                        <memberOf key="att.staffGrp.vis"/>
                        <memberOf key="att.staffGrp.ges"/>
                        <!--<memberOf key="att.staffGrp.anl"/>-->
                        <memberOf key="model.staffGrpLike"/>
                    </classes>
                    <content>
                        <!--<rng:zeroOrMore>
                            <rng:ref name="grpSym"/>
                        </rng:zeroOrMore>-->
                        <rng:zeroOrMore>
                            <rng:choice>
                                <rng:ref name="model.labelLike"/>
                            </rng:choice>
                        </rng:zeroOrMore>
                        <rng:zeroOrMore>
                            <rng:ref name="model.instrDefLike"/>
                        </rng:zeroOrMore>
                        <rng:oneOrMore>
                            <rng:choice>
                                <rng:ref name="model.staffGrpLike"/>
                                <rng:ref name="model.staffDefLike"/>
                            </rng:choice>
                        </rng:oneOrMore>
                        <!--<rng:zeroOrMore>
                            <rng:ref name="grpSym"/>
                        </rng:zeroOrMore>-->
                    </content>
                    <constraintSpec ident="Check_staffGrp_unique_staff_n_values" scheme="schematron">
                        <constraint>
                            <sch:rule context="mei:staffGrp">
                                <sch:let name="countstaves" value="count(descendant::mei:staffDef)"/>
                                <sch:let name="countuniqstaves"
                                    value="count(distinct-values(descendant::mei:staffDef/@n))"/>
                                <sch:assert test="$countstaves eq $countuniqstaves">Each staffDef must have a unique value
                                    for the n attribute.</sch:assert>
                            </sch:rule>
                        </constraint>
                    </constraintSpec>
                    <remarks>
                        <p>System is the more proper name for this concept (Read, p. 37-38). Bracketed staff groups
                            may contain other bracketed or braced staff groups or single staves. See Read, p. 35-38,
                            examples p. 434, 438.</p>
                    </remarks>
                </elementSpec>
                
                <!-- taken from CMN customization -->
                <!-- Disable mensural- and neume-specific model classes in the shared module -->
                <!-- <classSpec ident="model.scorePart.mensuralAndNeumes" module="MEI.shared" type="model" mode="delete"/> -->
                <classSpec ident="model.sectionPart.mensuralAndNeumes" module="MEI.shared" type="model" mode="delete"/>
                <classSpec ident="model.staffPart.mensuralAndNeumes" module="MEI.shared" type="model" mode="delete"/>
                <classSpec ident="model.layerPart.mensuralAndNeumes" module="MEI.shared" type="model" mode="delete"/>

                <!-- Move model.noteModifierLike from layerPart.mensuralAndNeumes to editTransPart.music -->
                <classSpec ident="model.noteModifierLike" module="MEI.shared" type="model" mode="replace">
                    <desc>Groups elements that modify note-like features.</desc>
                    <classes>
                        <memberOf key="model.editTransPart.music"/>
                    </classes>
                </classSpec>

            </schemaSpec>
        </body>
    </text>
</TEI>
