<!--
© 2017 by the Music Encoding Initiative (MEI) Council.
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://opensource.org/licenses/ECL-2.0.

  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.

  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.

  CONTACT: info@music-encoding.org                        
                    --><?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?><?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?><TEI xmlns:rng="http://relaxng.org/ns/structure/1.0"
     xmlns:sch="http://purl.oclc.org/dsdl/schematron"
     xmlns="http://www.tei-c.org/ns/1.0"
     version="5.0"
     rend="book"
     xml:lang="en">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title level="s">The Music Encoding Initiative Guidelines</title>
            <title level="a">Shared Concepts in MEI</title>
            <respStmt>
               <resp>Edited by</resp>
               <!--TODO: To be filled manually-->
            </respStmt>
            <respStmt>
               <resp>With contributions by</resp>
               <!--TODO: To be filled automatically via GitHub API-->
               <name ref="https://api.github.com/users/bwbohl">Benjamin W. Bohl</name>
               <name ref="https://api.github.com/users/BruxDDay">BruxDDay</name>
               <name ref="https://api.github.com/users/dinamix">dinamix</name>
               <name ref="https://api.github.com/users/ndubo">Norbert Dubowy</name>
               <name ref="https://api.github.com/users/fujinaga">Ichiro Fujinaga</name>
               <name ref="https://api.github.com/users/axgeertinger">Axel Geertinger</name>
               <name ref="https://api.github.com/users/ahankinson">Andrew Hankinson</name>
               <name ref="https://api.github.com/users/irmlindcapelle">irmlindcapelle</name>
               <name ref="https://api.github.com/users/frakel">franz kelnreiter</name>
               <name ref="https://api.github.com/users/kepper">kepper</name>
               <name ref="https://api.github.com/users/zolaemil">Zoltan Komives</name>
               <name ref="https://api.github.com/users/DDMAL-LabManager">DDMAL LabManager</name>
               <name ref="https://api.github.com/users/uliska">Urs Liska</name>
               <name ref="https://api.github.com/users/elsinhadl">Elsa De Luca</name>
               <name ref="https://api.github.com/users/napulen">Néstor Nápoles López</name>
               <name ref="https://api.github.com/users/MajaHartwig">MajaHartwig</name>
               <name ref="https://api.github.com/users/musicEnfanthen">Stefan Münnich</name>
               <name ref="https://api.github.com/users/pe-ro">pe-ro</name>
               <name ref="https://api.github.com/users/lpugin">Laurent Pugin</name>
               <name ref="https://api.github.com/users/JRegimbal">Juliette Regimbal</name>
               <name ref="https://api.github.com/users/rettinghaus">Klaus Rettinghaus</name>
               <name ref="https://api.github.com/users/aseipelt">Agnes Seipelt</name>
               <name ref="https://api.github.com/users/martha-thomae">Martha E. Thomae</name>
               <name ref="https://api.github.com/users/raffazizzi">Raffaele Viglianti</name>
               <name ref="https://api.github.com/users/vigliensoni">Gabriel Vigliensoni</name>
               <name ref="https://api.github.com/users/th-we">Thomas Weber</name>
               <name ref="https://api.github.com/users/musicog">David M. Weigl</name>
            </respStmt>
         </titleStmt>
         <publicationStmt>
            <distributor>Music Encoding Initiative (MEI) Council</distributor>
            <availability>
               <p>
                  <hi>Music Encoding Initiative (MEI)</hi>
               </p>
               <p>NOTICE: Copyright (c) 2018 by the Music Encoding Initiative (MEI) Council.</p>
               <p>Licensed under the Educational Community License, Version 2.0 (the "License"); you may
                                            not use this file except in compliance with the License. You may obtain a copy of the
                                            License at <ref target="http://opensource.org/licenses/ECL-2.0">http://opensource.org/licenses/ECL-2.0</ref>.</p>
               <p>Unless required by applicable law or agreed to in writing, software distributed under
                                            the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
                                            KIND, either express or implied. See the License for the specific language governing
                                            permissions and limitations under the License.</p>
               <p>This is a derivative work based on earlier versions of the schema copyright (c)
                                            2001-2006 Perry Roland and the Rector and Visitors of the University of Virginia;
                                            licensed under the Educational Community License version 1.0.</p>
               <p>CONTACT: contact@music-encoding.org </p>
            </availability>
         </publicationStmt>
         <sourceDesc>
            <p></p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
   <text>
      <body>
         <div xml:id="shared" type="div1">
            <head>Shared Concepts in MEI</head>
            <p>This chapter describes basic principles and shared concepts of MEI. Besides giving a general understanding of the basic structures of an MEI file it tries to introduce elements, models, and attributes that are part of the MEI.shared module, describe their use or at least point to chapters of these guidelines or tutorials that describe their use and application.</p>
            <div xml:id="sharedStructuralElements" type="div2">
               <head>Structural Elements</head>
               <p>Besides elements used by multiple other modules the MEI.shared module defines the main structural elements of an MEI file. Please be aware that there is also a <ref target="https://music-encoding.org/tutorials/100-structure.html">A short tutorial about the basics of XML &amp; MEI</ref> that helps understanding and learning the contents of this chapter.</p>
               <div xml:id="sharedDocumentElements" type="div3">
                  <head>Document Root Elements</head>
                  <p>MEI defines four elements qualifying as root elements (<abbr>i.e.</abbr>, the element containing everything else) of an MEI document; the most common of these are defined in the MEI.shared module:</p>
                  <p>
                     <specList>
                        <specDesc key="mei"/>
                     </specList>
                  </p>
                  <p>The most straightforward – and probably the most common choice fitting most of the use cases when encoding music – is the <gi scheme="MEI">mei</gi> element. It contains an <gi scheme="MEI">meiHead</gi> element for capturing metadata and a <gi scheme="MEI">music</gi> element for describing the musical text. A more detailed description of the application of <gi scheme="MEI">music</gi> can be found in the course of this section (see <ptr target="#sharedMusicElement"/>). If you want to learn more about the use of the <gi scheme="MEI">meiHead</gi> element – formally declared in the MEI.header module – please visit the chapter <ptr target="#headerstructure"/> in the <ptr target="#metadata"/> section.</p>
                  <p>The below example shows the basic structure of an MEI file with <gi scheme="MEI">mei</gi> as root element. Please be aware that this example still does not represent a valid MEI file:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample0000.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>The other potential root elements serve different usecases or purposes.</p>
                  <p>
                     <specList>
                        <specDesc key="music"/>
                     </specList>
                  </p>
                  <p>A document with <gi scheme="MEI">music</gi> as root element provides music notation markup without metadata, and could serve embedding MEI within other kinds of markup, <abbr>e.g.</abbr>, TEI (see <ptr target="#tei"/>).</p>
                  <p>The below example shows the basic structure of an MEI file with <gi scheme="MEI">music</gi> as root element. Basically this already represents a valid MEI file, although without any contents:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample0003.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>
                     <specList>
                        <specDesc key="meiCorpus"/>
                     </specList>
                  </p>
                  <p>
                     <gi scheme="MEI">meiCorpus</gi> contains an <gi scheme="MEI">meiHead</gi> element describing a collection of related MEI-encoded texts – known as a corpus – and an <gi scheme="MEI">mei</gi> element for each text. Further information regarding the organization and encoding of music corpora is given in chapter <ptr target="#corpus"/>.</p>
                  <p>The below example shows the basic structure of an MEI file with <gi scheme="MEI">meiCorpus</gi> as root element. Please be aware that this example still does not represent a valid MEI file:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample0001.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>
                     <specList>
                        <specDesc key="meiHead"/>
                     </specList>
                  </p>
                  <p>The <gi scheme="MEI">meiHead</gi> element, formally declared in the MEI.header module, is described in chapter <ptr target="#headerstructure"/>. A document with <gi scheme="MEI">meiHead</gi> as root element only contains metadata and is also known as an independent or stand-alone header. Stand-alone headers are more fully described in chapter <ptr target="#headerIndependentHeader"/>.</p>
                  <p>The below example shows the basic structure of an MEI file with <gi scheme="MEI">meiHead</gi> as root element. Please be aware that this example still does not represent a valid MEI file:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample0002.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>The above examples all carry two attributes on their root elements. While the @xmlns is a general feature of XML and not defined in MEI it is crucial for stating the fact that it is an MEI file you are dealing with. The second attribute is <ident type="class">att.meiVersion</ident>.</p>
                  <p>
                     <specList>
                        <specDesc key="att.meiVersion" atts="meiversion"/>
                     </specList>
                  </p>
                  <p>Although not required the <ident type="class">att.meiVersion</ident> attribute is important for defining a stable reference to a specific MEI-version used in the enclosed encoding, and thus is highly recommended on your root element.</p>
               </div>
               <div xml:id="sharedMusicElement" type="div3">
                  <head>General Music Structure Elements</head>
                  <p>
                     <specList>
                        <specDesc key="music"/>
                     </specList>
                  </p>
                  <p>As indicated above, the general place for encoding the musical text is the <gi scheme="MEI">music</gi> element. MEI.shared offers two possible child elements:</p>
                  <p>
                     <specList>
                        <specDesc key="body"/>
                        <specDesc key="group"/>
                     </specList>
                  </p>
                  <p>While <gi scheme="MEI">body</gi> holds the contents of a single musical text, <gi scheme="MEI">group</gi> allows the textual body to consists of a series of (subordinate) musical texts or other <abbr>e.g.</abbr>, to represent a collection of independent musical texts which is to be regarded as a single unit for processing or other purposes. It is provided to simplify the encoding of collections, anthologies, and cyclic works. It can also be used to record the potentially complex internal structure of corpora, covered more fully in chapter <ptr target="#corpus"/>. Whether the musical text being encoded should be structured one way or the other is not to be decided here. For example, a collection of songs might be regarded as a single item in some circumstances, or as a number of distinct items in others. In such borderline cases, the encoder must choose whether to treat the text as unitary or composite; each option may have advantages and disadvantages.</p>
                  <p>There are several more possible child elements of the <gi scheme="MEI">music</gi> element defined in other modules of MEI, such as <gi scheme="MEI">front</gi> and <gi scheme="MEI">back</gi> elements (defined in MEI.text module, cf. <ptr target="#text"/>), <gi scheme="MEI">performance</gi> (defined in MEI.performance module, cf. <ptr target="#performances"/>), <gi scheme="MEI">genDesc</gi> (defined in MEI.genetic module, cf. <ptr target="#genetic"/>), <gi scheme="MEI">facsimile</gi> (defined in MEI.facsimile module, cf. <ptr target="#facsimiles"/>).</p>
                  <p>Please be aware that the following examples still do not reflect valid MEI files as they are missing some required elements not defined in the MEI.shared module.</p>
                  <p>The basic structure of a unitary musical text:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample000.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>Examples of composite texts which may be represented using the <gi scheme="MEI">group</gi> element include anthologies and other collections. The presence of common front matter referring to the whole collection, possibly in addition to front matter relating to each individual musical text, is a good indication that a given musical text might usefully be encoded in this way.</p>
                  <p>For example, the overall structure of a collection of songs might be encoded as follows:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample002.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>A group of musical texts may contain other unitary and grouped texts:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample003.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>The <gi scheme="MEI">group</gi> element may be used to encode any kind of collection in which the constituents are regarded by the encoder as works in their own right, such as <hi rend="italic">ad hoc</hi> single- or multiple-composer collections or anthologies of works not originally conceived of as a single composition.</p>
                  <div xml:id="sharedDivisionsBody" type="div4">
                     <head>Divisions of the Body</head>
                     <p>This section describes sub-division of the <gi scheme="MEI">body</gi> of a musical text. Front and back matter are described in chapter <ptr target="#text"/>.</p>
                     <p>
                        <specList>
                           <specDesc key="mdiv"/>
                           <specDesc key="att.typed" atts="type"/>
                           <specDesc key="att.classed" atts="class"/>
                        </specList>
                     </p>
                     <p>The body of a unitary musical text may contain one or more discrete, linear segments. The names commonly used for these structural subdivisions vary with the genre, style, and time period of the music, or even at the whim of the author, editor, or publisher. For example, a major subdivision of a symphony is generally referred to as a ‘movement’. An opera, on the other hand, is usually organized into ‘acts’ and then further by ‘scenes’. All such divisions are treated as occurrences of the same neutrally-named <gi scheme="MEI">mdiv</gi> element. The attributes <att>type</att> or <att>class</att> may be used to categorize them independently of their hierarchic level.</p>
                     <p>To accommodate "divisions within divisions", an <gi scheme="MEI">mdiv</gi> element may contain additional <gi scheme="MEI">mdiv</gi> sub-elements nested to any level required. For example, the encoding of a multi-movement work, such as a symphony, might have the following structure:</p>
                     <p>
                        <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample004.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>While dramatic works, such as Verdi's opera, <hi rend="italic">Il Trovatore</hi>, often exhibit a more deeply-nested structure:</p>
                     <p>
                        <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample005.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>Conventionally, in performance the musical structures represented by <gi scheme="MEI">mdiv</gi> elements are separated by pauses; however, <hi rend="italic">attacca</hi>, <hi rend="italic">attacca subito</hi>, <hi rend="italic">seque</hi>, or similar terms are sometimes used at the end of an <gi scheme="MEI">mdiv</gi> to indicate that the next <gi scheme="MEI">mdiv</gi> should begin immediately after the conclusion of the current one. These terms have no effect, however, on the logical segmentation of musical content using <gi scheme="MEI">mdiv</gi> elements.</p>
                  </div>
                  <div xml:id="sharedMdivContent" type="div4">
                     <head>Content of Musical Divisions</head>
                     <p>The contents of <gi scheme="MEI">mdiv</gi> can be organised according to the two encoding paradigms provided by the <gi scheme="MEI">score</gi> and <gi scheme="MEI">parts</gi> elements.</p>
                     <p>
                        <specList>
                           <specDesc key="score"/>
                           <specDesc key="parts"/>
                        </specList>
                     </p>
                     <p>The <gi scheme="MEI">score</gi> element represents notation in which all the parts of an ensemble are arranged on vertically aligned staves, while the <gi scheme="MEI">parts</gi> element collects the individually notated parts for each performer or group of performers. The explicit encoding of these two ‘views’ is necessary because it is not always possible or desirable to automatically derive one view from the other. In addition, separating scores and parts can eliminate a great deal of markup complexity.</p>
                     <p>
                        <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample006.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>The <gi scheme="MEI">score</gi> and <gi scheme="MEI">parts</gi> elements may also be employed to accommodate different methods of organizing the markup – with no particular presentation implied. In this case, software may render a collection of parts as a score or a score as a collection of parts.</p>
                     <p>Within the collective <gi scheme="MEI">parts</gi> element, notation for a single performer is represented by the <gi scheme="MEI">part</gi> element:</p>
                     <p>
                        <specList>
                           <specDesc key="part"/>
                        </specList>
                     </p>
                     <p>A <gi scheme="MEI">part</gi> is effectively a small-scale score, allowing all the encoding features of a full score, such as multiple staves, performance directives, and so on. A group of <gi scheme="MEI">part</gi> elements is useful for encoding performing parts when there is no score, such as in early music part books; when the parts have non-aligning bar lines; when different layout features, such as page turns, are needed for the score and parts; or for accommodating software that requires part-by-part encoding.</p>
                     <p>Please note that <gi scheme="MEI">part</gi> elements in MEI are not an indication of voice leading or staff grouping. Voice leading can be encoded using the <att>next</att> attribute, available on all the members of the <ident type="class">model.eventLike</ident> class. The <gi scheme="MEI">staffGrp</gi> element handles grouping of staves in the score context. <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample007.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>In both score and part views, the <gi scheme="MEI">scoreDef</gi> element is used to describe logical characteristics of the encoded music, such as key signature, the sounding key (as opposed to the notated key signature), meter, etc., and visual features, such as page size, staff groupings and display labels, etc. The <gi scheme="MEI">staffGrp</gi> elements within <gi scheme="MEI">scoreDef</gi> and the order of <gi scheme="MEI">staffDef</gi> elements inside <gi scheme="MEI">staffGrp</gi> should follow the score order of the source for the encoding.</p>
                     <p>A <gi scheme="MEI">part</gi> or <gi scheme="MEI">score</gi> may be further divided into linear segments called "sections".</p>
                     <p>
                        <specList>
                           <specDesc key="section"/>
                        </specList>
                     </p>
                     <p>
                        <gi scheme="MEI">section</gi> elements are often used as a scoping mechanism for clef signs, key and meter signatures, as well as metronome, tempo, and expression markings. Using <gi scheme="MEI">section</gi> elements can help to minimize the need for backward scanning to establish context when the starting point for access is not at the beginning of the score. <gi scheme="MEI">section</gi> elements may also be used for other user-defined, <abbr>i.e.</abbr>, analytical or editorial, purposes and may therefore be arbitrarily nested to any desired level.</p>
                     <p>The <gi scheme="MEI">ending</gi> element shares the same model as the <gi scheme="MEI">section</gi> element. Unlike <gi scheme="MEI">section</gi>, however, it may not be recursively nested.</p>
                     <p>
                        <specList>
                           <specDesc key="ending"/>
                        </specList>
                     </p>
                     <p>The most common (non-analytical, non-editorial) use of <gi scheme="MEI">section</gi> and <gi scheme="MEI">ending</gi> elements is illustrated below:</p>
                     <p>
                        <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample008.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>Within <gi scheme="MEI">section</gi> elements, several methods of organization are possible, depending upon the notational style of the source material and the encoder's needs. For example, when the MEI.cmn module is used, the default organization is measure-by-measure, with <gi scheme="MEI">staff</gi> and <gi scheme="MEI">layer</gi> sub-elements within each <gi scheme="MEI">measure</gi>. Further discussion of CMN notation is continued in chapter <ptr target="#cmn"/>.</p>
                     <p>However, staff-by-staff organization is more appropriate for music without measures and is provided when either the MEI.mensural or MEI.neumes module is employed. Coverage of mensural notation is provided in chapter <ptr target="#mensural"/>, while <ptr target="#neumes"/> describes neumatic notation.</p>
                     <p>It must be noted that, when both the MEI.cmn and MEI.mensural modules are available, it is possible to encode CMN notation without using <gi scheme="MEI">measure</gi> elements; that is, staff-by-staff organization may be used and the ends of measures marked using <gi scheme="MEI">barLine</gi> elements.</p>
                     <p>In certain circumstances, this approach may be preferable for reproduction of the visual layout of the music. However, the simultaneous use of the <gi scheme="MEI">measure</gi> and <gi scheme="MEI">barLine</gi> elements may lead to confusion and should be avoided.</p>
                     <p>Typically, MEI follows the order of sections as they appear in the document being encoded. When performance requires a different order, for instance in the case of D.C. and D.S. directives, the following element may be used to define the performance order.</p>
                     <p>
                        <specList>
                           <specDesc key="expansion"/>
                        </specList>
                     </p>
                     <p>In the following example, <gi scheme="MEI">expansion</gi> is used to indicate how the notated sections should be ordered in a "through-composed" rendition, for example for machine performance or analysis. The <att>plist</att> attribute contains an ordered list of identifiers of descendant <gi scheme="MEI">section</gi>, <gi scheme="MEI">ending</gi>, <gi scheme="MEI">lem</gi>, or <gi scheme="MEI">rdg</gi> elements. The sequence of values in the <att>plist</att> attribute indicates that the section labelled 'A' comes first, then the section labelled 'B', followed by the 'A' section again. This mechanism must be specified independently of any textual directives, such as "Da capo" or "D.S. al Fine", that may be present in the document.</p>
                     <p>
                        <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample009.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                  </div>
               </div>
               <div xml:id="sharedDocumentStructure" type="div3">
                  <head>Document Layout Elements</head>
                  <p>This section introduces the elements that can be used to represent document layout features in MEI, be it for the sake of capturing an original source's layout when transcribing or setting up layout features in so called ‘born digital’ documents.</p>
                  <p>
                     <specList>
                        <specDesc key="pb"/>
                        <specDesc key="att.nNumberLike" atts="n"/>
                     </specList>
                  </p>
                  <p>The <gi scheme="MEI">pb</gi> element can be used to mark page beginnings. When transcribing an existing document the <att>n</att> attribute should be used to record the page number displayed in the source. It need not be an integer, <abbr>e.g.</abbr>, 'iv', or 'p17-3'. The logical page number can be calculated by counting previous <gi scheme="MEI">pb</gi> ancestor elements. When used in a score context, a page beginning implies an accompanying system beginning. This element is modeled on an element in the Text Encoding Initiative (TEI) standard.</p>
                  <p>
                     <specList>
                        <specDesc key="pgDesc"/>
                     </specList>
                  </p>
                  <p>Additional information can be provided on page beginnings. Ranging from a prose description of the page layout in <gi scheme="MEI">pgDesc</gi> to defined headers and footers.</p>
                  <p>
                     <specList>
                        <specDesc key="pgHead"/>
                        <specDesc key="pgHead2"/>
                        <specDesc key="pgFoot"/>
                        <specDesc key="pgFoot2"/>
                     </specList>
                  </p>
                  <p>Columned layout can be captured with the following elements:</p>
                  <p>
                     <specList>
                        <specDesc key="cb"/>
                        <specDesc key="cb" atts="n"/>
                        <specDesc key="colLayout"/>
                     </specList>
                  </p>
                  <p>In order to force a system break in the musical text <gi scheme="MEI">sb</gi> can be used.</p>
                  <p>
                     <specList>
                        <specDesc key="sb"/>
                     </specList>
                  </p>
                  <p>Critical editions and collections of works often contain extensive text, such as a title page, table of contents, an introductory essay, commentary, biographical sketch, index, etc. These textual items may appear in either the <gi scheme="MEI">front</gi> or <gi scheme="MEI">back</gi> elements. The front and back elements, available only when the MEI.text module is activated, are described more fully in chapter <ptr target="#text"/>.</p>
                  <p>
                     <specList>
                        <specDesc key="front"/>
                        <specDesc key="back"/>
                     </specList>
                  </p>
               </div>
               <div xml:id="sharedTextStructure" type="div3">
                  <head>General Text Structure Elements</head>
                  <p>The MEI.shared module provides basic text structure elements.</p>
                  <p>
                     <specList>
                        <specDesc key="div"/>
                        <specDesc key="head"/>
                        <specDesc key="lg"/>
                        <specDesc key="lb"/>
                        <specDesc key="p"/>
                     </specList>
                  </p>
                  <p>A detailed description of their use and of other elements from the MEI.text module can be found in the corresponding chapter <ptr target="#text"/>.</p>
               </div>
            </div>
            <div xml:id="sharedMusicalElements" type="div2">
               <head>General Music Elements</head>
               <p>This section lists the elements defined in the shared module that are available within the music element.</p>
               <div xml:id="sharedScoreAndParts" type="div3">
                  <head>Score and Parts</head>
                  <p>The following elements are provided for the capture of scores and parts:</p>
                  <p>
                     <specList>
                        <specDesc key="score"/>
                        <specDesc key="parts"/>
                        <specDesc key="part"/>
                        <specDesc key="scoreDef"/>
                        <specDesc key="staffDef"/>
                        <specDesc key="layerDef"/>
                        <specDesc key="staffGrp"/>
                        <specDesc key="grpSym"/>
                        <specDesc key="label"/>
                        <specDesc key="clef"/>
                        <specDesc key="clefGrp"/>
                        <specDesc key="keySig"/>
                        <specDesc key="keyAccid"/>
                     </specList>
                  </p>
                  <p>The character of elements specifying one or more score or staff parameters, such as meter and key signature, clefs, etc., is that of a milestone; that is, they affect all subsequent material until a following redefinition. A <gi scheme="MEI">scoreDef</gi> element, which may affect more than just one staff, is allowed only within <gi scheme="MEI">score</gi>, <gi scheme="MEI">part</gi> and <gi scheme="MEI">section</gi> elements, whereas <gi scheme="MEI">staffDef</gi> is allowed only within <gi scheme="MEI">staffGrp</gi>, <gi scheme="MEI">staff</gi> and <gi scheme="MEI">layer</gi>. A <gi scheme="MEI">staffDef</gi> nested inside a <gi scheme="MEI">staff</gi> must bear the same value for its <att>n</att> attribute as its parent staff and may thus not affect other staves.</p>
                  <p>The actual use of these elements depends on the repertoire and historical context of the source material. For details on their use in Common Western Notation, please refer to chapter <ptr target="#cmnDefs"/>.</p>
               </div>
               <div xml:id="sharedStavesAndLayers" type="div3">
                  <head>Staves and Layers</head>
                  <p>The elements below are used to capture the logical organization of musical notation:</p>
                  <p>
                     <specList>
                        <specDesc key="staff"/>
                        <specDesc key="layer"/>
                     </specList>
                  </p>
                  <p>The actual use of the <gi scheme="MEI">staff</gi> and <gi scheme="MEI">layer</gi> elements depends on the repertoire and historical context of the source material. For details on their use in Common Western Notation, please refer to chapter <ptr target="#cmn"/>. For mensural notation, see chapter <ptr target="#mensural"/>, and for neumatic notation, chapter <ptr target="#neumes"/>.</p>
               </div>
               <div xml:id="sharedBasicEvents" type="div3">
                  <head>Basic Music Events</head>
                  <p>The basic features of music notation are represented by the following elements:</p>
                  <p>
                     <specList>
                        <specDesc key="note"/>
                        <specDesc key="chord"/>
                        <specDesc key="rest"/>
                     </specList>
                  </p>
                  <p>The characteristics of stems on notes and chords are indicated by means of attributes found in the <ident type="class">att.stems</ident> class.</p>
                  <p>
                     <specList>
                        <specDesc key="att.stems"
                                  atts="stem.dir stem.len stem.mod stem.pos stem.x stem.y"/>
                     </specList>
                  </p>
               </div>
               <div xml:id="sharedOtherEvents" type="div3">
                  <head>Other events</head>
                  <p>Because they can occur in the context of a stream of events on the staff, some elements which are used in other contexts are also treated as events. For example, in addition to being used to define the initial clef of a staff, the <gi scheme="MEI">clef</gi> element can also be used to indicate a clef change.</p>
                  <div xml:id="sharedKeySignaturesAndClefs" type="div4">
                     <head>Key Signatures and Clefs</head>
                     <p>Key signatures and clefs as well as intra-staff changes to these musical parameters are treated as events.</p>
                     <p>
                        <specList>
                           <specDesc key="keySig"/>
                           <specDesc key="keyAccid"/>
                           <specDesc key="clef"/>
                           <specDesc key="clefGrp"/>
                        </specList>
                     </p>
                  </div>
                  <div xml:id="sharedBarlines" type="div4">
                     <head>Bar Lines and Custos Signs</head>
                     <p>Measure separators, <abbr>i.e.</abbr>, bar lines, and custos signs are also considered to be events.</p>
                     <p>
                        <specList>
                           <specDesc key="barLine"/>
                           <specDesc key="custos"/>
                        </specList>
                     </p>
                  </div>
                  <div xml:id="sharedAccidentalsArticulations" type="div4">
                     <head>Accidentals, Articulation Symbols, Augmentation Dots, and Custos Signs</head>
                     <p>The following elements are regarded as events primarily because they sometimes occur independently of any associated notes, rests, or chords, especially in mensural and neume repertoires.</p>
                     <p>
                        <specList>
                           <specDesc key="accid"/>
                           <specDesc key="artic"/>
                           <specDesc key="dot"/>
                        </specList>
                     </p>
                     <p>
                        <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="verovio code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/verovio/accid-03.mei" parse="text"/></egXML>
                        </figure>
                     </p>
                  </div>
                  <div xml:id="sharedLyricSyllables" type="div4">
                     <head>Lyric Syllables</head>
                     <p>The <gi scheme="MEI">syl</gi> element is used to mark a word or portion of a word that is to be vocally performed. A fuller description of its use is provided in chapter <ptr target="#lyricsSyl"/>.</p>
                     <p>
                        <specList>
                           <specDesc key="syl"/>
                        </specList>
                     </p>
                  </div>
                  <div xml:id="sharedNoteSpacing" type="div4">
                     <head>Event Spacing</head>
                     <p>The following elements provide control over the horizontal spacing of notational events, such as notes, chords, rests, etc.:</p>
                     <p>
                        <specList>
                           <specDesc key="space"/>
                        </specList>
                     </p>
                     <p>In this context, the term ‘space’ is used to mean whitespace that is required to meaningfully align multiple voices in a multi-voice texture. In DARMS these were referred to as ‘push codes’. The <gi scheme="MEI">space</gi> element is most often used when a new voice appears on a staff mid-measure.</p>
                     <p>The <gi scheme="MEI">space</gi> element may also be used to align material that crosses staves.</p>
                     <p>‘Space’ can be thought of as another kind of event. In fact, some refer to this concept as an ‘invisible rest’.</p>
                     <p>While ‘space’ is meaningful, ‘padding’ is non-essential whitespace that is used to shift the position of the events which follow.</p>
                     <p>
                        <specList>
                           <specDesc key="pad"/>
                        </specList>
                     </p>
                     <p>The <gi scheme="MEI">pad</gi> element is provided in order to capture software-dependent placement information when it is desirable to do so. Unless the MEI file will be used as an intermediate file format, this is usually not necessary.</p>
                  </div>
               </div>
               <div xml:id="sharedExpressionMarks" type="div3">
                  <head>Expression Marks</head>
                  <p>Expression marks are instructions in the form of words, abbreviations, or symbols that convey aspects of performance that cannot be expressed purely through the musical notation.</p>
                  <div xml:id="sharedTextDirectives" type="div4">
                     <head>Text Directives</head>
                     <p>All of the following elements can be considered text directives; however, MEI uses the <gi scheme="MEI">dir</gi> element specifically for words, abbreviations, numbers, or symbols specifying or suggesting the manner of performance that are not encoded elsewhere using the more specific elements of <gi scheme="MEI">tempo</gi> and <gi scheme="MEI">dynam</gi>.</p>
                     <p>
                        <specList>
                           <specDesc key="dir"/>
                        </specList>
                     </p>
                     <p>Examples of directives include text strings such as 'affettuoso', fingering numbers, or music symbols such as segno and coda symbols or fermatas over a bar line. Directives can be control elements. That is, they can linked via their attributes to other events. The starting point of the directive may be indicated by either a tstamp, tstamp.ges, tstamp.real or startid attribute, while the ending point may be recorded by either a tstamp2, dur, dur.ges or endid attribute. It is a semantic error not to specify a starting point attribute.</p>
                  </div>
                  <div xml:id="sharedTempoMarks" type="div4">
                     <head>Tempo</head>
                     <p>Tempo marks are indications through words, abbreviations, or specific metronome settings of the speed at which a piece of music is to be performed. Both instantaneous and continuous tempo markings may be encoded using this element.</p>
                     <p>
                        <specList>
                           <specDesc key="tempo"/>
                        </specList>
                     </p>
                     <p>
                        <figure>
                           <head/>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="verovio code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/verovio/tempo-01.mei" parse="text"/></egXML>
                        </figure>
                     </p>
                  </div>
                  <div xml:id="sharedDynamics" type="div4">
                     <head>Dynamics</head>
                     <p>Dynamics, or dynamic marks, are terms, abbreviations, and symbols that indicate the specific degrees of volume of a note, phrase, or section of music, <abbr>e.g.</abbr>, "piano", "forte". Transitions from one volume level to another, <abbr>e.g.</abbr>, "crescendo", "diminuendo", are also specified through dynamic marks.</p>
                     <p>
                        <specList>
                           <specDesc key="dynam"/>
                        </specList>
                     </p>
                  </div>
                  <div xml:id="sharedPhraseMarks" type="div4">
                     <head>Phrase Marks</head>
                     <p>Phrase marks are curved lines placed over or under notes to delineate short sections of a work that represent a unified melodic idea, analogous to a phrase in literature.</p>
                     <p>
                        <specList>
                           <specDesc key="phrase"/>
                           <specDesc key="slur"/>
                        </specList>
                     </p>
                     <p>MEI maintains a distinction between phrase marks and slurs, the latter being curved lines over or under a sequence of notes indicating they are to be performed using a particular playing/singing technique, notes that should be taken in a single breath by wind instruments or played by string instruments using a single stroke of the bow. Often, a slur also indicates that the affected notes should be played in a <hi rend="italic">legato</hi> manner.</p>
                     <p>Even so, it is common for both of these concepts to be referred to generically as "slurs". Therefore, unless one is encoding music from a repertoire in which this distinction is important, the <gi scheme="MEI">slur</gi> element should be preferred over <gi scheme="MEI">phrase</gi>.</p>
                  </div>
                  <div xml:id="sharedOrnaments" type="div4">
                     <head>Ornaments</head>
                     <p>Ornaments are formulae of embellishment that can be realized by adding supplementary notes to one or more notes of the melody.</p>
                     <p>
                        <specList>
                           <specDesc key="ornam"/>
                        </specList>
                     </p>
                     <p>MEI provides a generic element for encoding an ornament symbol that is not a mordent, turn, or trill. For those common CMN ornaments, please refer to <ptr target="#cmnOrnaments"/>.</p>
                     <p>Ornaments can be represented as textual strings (<abbr>e.g.</abbr>, with a Unicode symbol) or with a user defined symbol (for the latter also see <ptr target="#userSymbols"/>).</p>
                     <p>Ornamentsmay also be encoded as so called control events (see also: <ptr target="#eventsControlevents"/>). That is, they be can linked via their attributes to other events. It is a semantic error not to specify a starting point attribute with either <att>tstamp</att> or <att>startid</att>.</p>
                  </div>
               </div>
            </div>
            <div xml:id="sharedCommonAttributes" type="div2">
               <head>Common Attributes</head>
               <p>The following attributes, all of which are defined in separate attribute classes but are also provided through the <ident type="class">att.common</ident> attribute class, are available on nearly all elements in an MEI encoding. They provide <abbr>e.g.</abbr>, the means to identify, label, or reference elements in MEI-encoded files.</p>
               <div xml:id="sharedXmlAttributes" type="div3">
                  <head>Attributes from the XML-namespace</head>
                  <p>The most general attributes that are very frequently encountered in MEI files are not even native MEI attributes but are coming from the basic definition of XML in the XML-namespace <ref target="http://www.w3.org/XML/1998/namespace">http://www.w3.org/XML/1998/namespace</ref>. MEI redefines some of them in the <ident type="class">att.basic</ident> class.</p>
                  <p>
                     <specList>
                        <specDesc key="att.id" atts="xml:id"/>
                     </specList>
                  </p>
                  <p>The value of the <att>xml:id</att> attribute serves as an identifier for an element and its content. Its value must be unique in the context of the current document and must conform to the definition of an XML Name provided by the W3C Recommendation at <ref target="http://www.w3.org/TR/xml/#NT-Name">http://www.w3.org/TR/xml/#NT-Name</ref>. Suggestions for constructing an <att>xml:id</att> value can be found at <ref target="http://www.w3.org/TR/xml/#sec-suggested-names">http://www.w3.org/TR/xml/#sec-suggested-names</ref>.</p>
                  <p>The <att>xml:id</att> attribute may take values similar to the following:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample014.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>This is an example of an incorrectly-formulated <att>xml:id</att> value:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="false"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample015.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>
                     <specList>
                        <specDesc key="att.basic" atts="xml:base"/>
                     </specList>
                  </p>
                  <p>At many locations in an MEI file one can reference internal or external references. E.g. the following example defines a graphic and references an external image (entity) by means of the <att>target</att> attribute:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample017.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>When a reference to an external entity is not a complete URI it is resolved against the current base URI; if not defined by other means this would be the location of the current document. The above example consequently would mean, that the file `myImage.jpg` referenced from <gi scheme="MEI">graphic</gi> resides at the same location (in the same folder) as the MEI-file.</p>
                  <p>The <att>xml:base</att> attribute may be used “to specify a base URI other than the base URI of the document or external entity.” (Marsch, Jonathan; Tobin, Richard: XML Base (Second Edition). W3C Recommendation 28 January 2009. online at: <ref target="http://www.w3.org/TR/2009/REC-xmlbase-20090128/">http://www.w3.org/TR/2009/REC-xmlbase-20090128/</ref>).</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample0017.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>The value of <att>xml:base</att> can be inherited from an ancestor. This is relevant for resolving relative links or URIs within the document. A comprehensible use case can be illustrated by the following example: the values of the graphic elements' <att>target</att> attribute can be completed by the <att>xml:base</att> value specified for the ancestor <gi scheme="MEI">facsimile</gi> element:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample018.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>In order to determine an absolute URI, the base URIs of the element and all its ancestors (including the document node) have to be taken into account. In the above case the relative URIs of <hi rend="italic">graphic/@target</hi> would consequently resolve to:</p>
                  <p>``` http://www.mySite.org/images/myImage.jpg http://www.mySite.org/images/myImage.tif ```</p>
                  <p>For more information on <att>xml:base</att> see: <ref target="https://www.w3.org/TR/xmlbase/">https://www.w3.org/TR/xmlbase/</ref>
                  </p>
                  <p>The <att>xml:id</att> and <att>xml:base</att> attributes are especially important when it comes to linking document fragments to eachother or to external entities. Many of the linking attributes are globally available in MEI through the <ident type="class">att.common</ident> attribute class.</p>
                  <p>Yet there are other attributes from the XML-Namespace encountered in MEI files.</p>
                  <p>
                     <specList>
                        <specDesc key="att.lang" atts="xml:lang"/>
                        <specDesc key="att.whitespace" atts="xml:space"/>
                     </specList>
                  </p>
                  <p>While <att>xml:lang</att> attribute may be used to encode the language of an element's contents, the <att>xml:space</att> attribute lets you define the handling of whitespace, <abbr>i.e.</abbr>, whitespace being important content ("preserve") or negligible ("default"). With the latter also being the default value if no <hi rend="italic">xml:space</hi> attribute is present.</p>
               </div>
               <div xml:id="sharedLabellingAttributes" type="div3">
                  <head>Label Attributes</head> 
                  <p>
                     <specList>
                        <specDesc key="att.labelled" atts="label"/>
                        <specDesc key="att.nNumberLike" atts="n"/>
                        <specDesc key="att.nInteger" atts="n"/>
                     </specList>
                  </p>
                  <p>The <att>label</att> and <att>n</att> attributes both serve a labeling function; however, they differ in the values they allow. The <att>n</att> attribute must be a single token, while <att>label</att> may contain a string value that includes spaces. This makes <att>label</att> useful for the capture of free-text labels, but a name or number specified with <att>n</att> may be easier to process.</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/shared/shared-sample016.txt" parse="text"/></egXML>
                     </figure>
                  </p>
               </div>
               <div xml:id="sharedClassificationAttributes" type="div3">
                  <head>Classification Attributes</head>
                  <p>
                     <specList>
                        <specDesc key="att.classed" atts="class"/>
                        <specDesc key="att.typed" atts="type"/>
                     </specList>
                  </p>
               </div>
               <div xml:id="sharedResponsibilityAttributes" type="div3">
                  <head>Responsibility Attributes</head>
                  <p>
                     <specList>
                        <specDesc key="att.responsibility" atts="resp"/>
                     </specList>
                  </p>
               </div>
               <div xml:id="sharedLinkingAttributes" type="div3">
                  <head>Linking Attributes</head>
                  <p>
                     <specList>
                        <specDesc key="att.linking"
                                  atts="copyof corresp follows next precedes prev sameas synch"/>
                     </specList>
                  </p>
                  <p>For a detailed description of linking mechanisms used in MEI also see the section on <ptr target="#linkingdata"/>.</p>
               </div>
            </div>
            <div xml:id="userSymbols" type="div2">
               <head>User-defined Symbols</head>
               <p>This chapter describes the elements, model classes, and attribute classes that are part of the MEI.usersymbols module.</p>
               <div xml:id="usersymbolsOverview" type="div3">
                  <head>Overview of the Usersymbols Module</head>
                  <p>The module described in this chapter makes available the following components:</p>
                  <div xml:id="usersymbolsElements" type="div4">
                     <head>Elements</head>
                     <p>
                        <specList>
                           <specDesc key="anchoredText"/>
                           <specDesc key="curve"/>
                           <specDesc key="line"/>
                           <specDesc key="symbol"/>
                           <specDesc key="symbolDef"/>
                           <specDesc key="symbolTable"/>
                        </specList>
                     </p>
                  </div>
                  <div xml:id="usersymbolsAttributeClasses" type="div4">
                     <head>Attribute Classes</head>
                     <p>No attribute classes are defined in this module.</p>
                  </div>
                  <div xml:id="usersymbolsModelClasses" type="div4">
                     <head>Model Classes</head>
                     <p>The usersymbols module defines the following model classes:</p>
                     <p>
                        <ident type="class">model.graphicPrimitiveLike</ident>
                        <ident type="class">model.symbolTableLike</ident>
                     </p>
                  </div>
               </div>
               <div xml:id="usersymbolsModuleUses" type="div3">
                  <head>Uses of the Usersymbols Module</head>
                  <p>The elements provided by the usersymbols module may be used in two ways:</p>
                  <list rend="numbered">
                     <item>For defining lines, curves and text elements that cannot be represented by a more specific element.</item>
                     <item>For defining reusable symbols and special graphical renditions.</item>
                  </list>
                  <p>For this purpose, it provides three elements as graphic primitives, <gi scheme="MEI">line</gi>, <gi scheme="MEI">curve</gi> and <gi scheme="MEI">anchoredText</gi>. Anywhere these elements are allowed, the <gi scheme="MEI">symbol</gi> element can be used as well. The <gi scheme="MEI">symbol</gi> element facilitates the re-use of symbols that were defined by <gi scheme="MEI">symbolDef</gi> elements.</p>
                  <div xml:id="usersymbolsReusableSymbols" type="div4">
                     <head>Defining Reusable Symbols</head>
                     <p>The <gi scheme="MEI">symbolDef</gi> element uses SVG markup or the aforementioned graphic primitives to describe a symbol. A symbol definition may also use symbols defined by other <gi scheme="MEI">symbolDef</gi> elements by employing the <gi scheme="MEI">symbol</gi> element.</p>
                     <p>The following code snippet shows a definition of a triangle percussion symbol using graphic primitives: <figure>
                           <head>Definition of a triangle percussion symbol using graphic primitives</head>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="feasible"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/usersymbols/usersymbols-sample345.txt" parse="text"/></egXML>
                        </figure>
                        <figure>
                           <head>Rendition of the triangle defined above</head>
                           <graphic url="../images/modules/usersymbols/triangle.png"/>
                        </figure>
                     </p>
                     <p>The following snippet encodes a symbol composed of the symbol defined above and additional graphics primitives: <figure>
                           <head>Symbol composed of the symbol defined above and additional graphics primitives</head>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="feasible"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/usersymbols/usersymbols-sample346.txt" parse="text"/></egXML>
                        </figure>
                        <figure>
                           <head>Rendition of the composite triangle symbol</head>
                           <graphic url="../images/modules/usersymbols/triangleWithStick.png"/>
                        </figure>
                     </p>
                  </div>
                  <div xml:id="usersymbolsSemanticImplications" type="div4">
                     <head>Elements Without Semantic Implications</head>
                     <p>The graphics primitives and symbols can be used directly in the music to describe text and lines on a purely graphical level, without implying a specific logical meaning. If possible, however, more meaningful elements should be used. This means for example, "a tempo" or "da capo" should in general not be put inside <gi scheme="MEI">anchoredText</gi>. Instead, <gi scheme="MEI">tempo</gi> and <gi scheme="MEI">dir</gi> should be used. Likewise, slurs and ties should be encoded using their respective elements, not using <gi scheme="MEI">curve</gi>, and for glissandi, <gi scheme="MEI">gliss</gi> should be used instead of <gi scheme="MEI">line</gi>.</p>
                     <p>An example usage for <gi scheme="MEI">line</gi> is the visualization of voice leading, which is not covered by a specific MEI element.</p>
                     <p>
                        <figure>
                           <head>Voice leading visualization as found in an Edition Peters print of Album für die Jugend by Schumann, No. 35 (Mignon), measure 6. (Unknown date, plate number is 10478.)</head>
                           <graphic url="../images/modules/usersymbols/mignon.png"/>
                        </figure>
                     </p>
                     <p>The following code snippet shows the encoding of the above example: <figure>
                           <head>Encoding of the Schumann example</head>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="feasible"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/usersymbols/usersymbols-sample347.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                  </div>
                  <div xml:id="usersymbolsGraphicalRendition" type="div4">
                     <head>Defining a Specific Graphical Rendition for a Semantic Element</head>
                     <p>Usersymbols can define the rendition of different elements in two ways. Some elements, for example <gi scheme="MEI">dir</gi> and <gi scheme="MEI">tempo</gi>, can have user symbol elements as content. In the following example, the content of <gi scheme="MEI">dir</gi> is used to provide pictograms of percussion instruments.</p>
                     <p>
                        <figure>
                           <head>Indicating percussion instruments using pictograms</head>
                           <graphic url="../images/modules/usersymbols/percussion.png"/>
                        </figure>
                     </p>
                     <p>The corresponding encoding would be as follows: <figure>
                           <head>Encoding of above example</head>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="true"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/usersymbols/usersymbols-sample348.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>A number of elements can point to an internally-defined symbol for rendering using the <att>altsym</att> attribute.</p>
                     <p>
                        <figure>
                           <head>Different treble clef renditions as written by Charpentier (source: Journal of Seventeenth-Century Music, Volume 12, No. 1 (2006), figure 3) http://www.sscm-jscm.org/v12/no1/gosine.html</head>
                           <graphic url="../images/modules/usersymbols/charpentier.png"/>
                        </figure>
                     </p>
                     <p>
                        <figure>
                           <head>Defining two staffs, each using its own treble clef shape</head>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="feasible"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/usersymbols/usersymbols-sample349.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>Externally-defined symbols may be referenced using a <att>glyph.name</att> or <att>glyph.num</att> attribute from the <ident type="class">att.extSym</ident> attribute class. Both attributes refer to Standard Music Font Layout (SMuFL) characters, if not specified differently by the <att>glyph.auth</att> and <att>glyph.uri</att> attributes.</p>
                     <p>
                        <figure>
                           <head>Use of glyph.auth and glyph.name and glyph.num attributes to refer to a SMUFL symbol</head>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="feasible"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/cmnOrnaments/cmnOrnaments-sample208.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                     <p>
                        <figure>
                           <head>Use of glyph.name and glyph.num attributes</head>
                           <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="feasible"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/usersymbols/usersymbols-sample350.txt" parse="text"/></egXML>
                        </figure>
                     </p>
                  </div>
               </div>
               <div xml:id="usersymbolsPositioningCoordinates" type="div3">
                  <head>Positioning and Coordinates</head>
                  <div xml:id="usersymbolsCoordinateSystem" type="div4">
                     <head>Axis Orientation</head>
                     <p>MEI uses the classic axis directions where the x-axis points from left to right and the y-axis points from bottom up. (This is compatible with PostScript's axis orientation, while SVG's y-axis points in the opposite direction.)</p>
                  </div>
                  <div xml:id="usersymbolsUnits" type="div4">
                     <head>Units</head>
                     <p>There are two types of units used by MEI: Staff units and units of the output coordinate system. Units of the output coordinate system can be translated to physical real world distances by means of the <att>vu.height</att> and <att>page.scale</att> of a <gi scheme="MEI">scoreDef</gi> element. Real world units are multiplied by the value of <att>page.scale</att> to get the corresponding value in output coordinate units.</p>
                     <p>If an element is scaled using the <att>scale</att> attribute, the actual size of the units changes accordingly.</p>
                  </div>
                  <div xml:id="usersymbolsPositioning" type="div4">
                     <head>Positioning</head>
                     <p>An element may be positioned using either absolute or relative coordinates. If absolute start point coordinates are specified using <att>x</att>/<att>y</att> coordinates (or their relatives <att>x2</att>/<att>y2</att> for endpoints) they take precedence over relative positions specified by <att>ho</att>/<att>vo</att>/<att>to</att> (or <att>startho</att>/<att>startvo</att>/<att>startto</att>). Analogously, <att>x2</att>/<att>y2</att> override <att>endho</att>/<att>endvo</att>/<att>endto</att>.</p>
                     <p>If <att>to</att>/<att>startto</att>/<att>endto</att> attributes are used, the start or end point is x-aligned with the indicated timestamp.</p>
                     <p>If relative start coordinates (<att>ho</att>/<att>vo</att> or <att>startho</att>/<att>startvo</att>) are used, the origin of the coordinate system to be used for the start point is the first one found by the following search schema:</p>
                     <list rend="numbered">
                        <item>If <att>startid</att> is present, the origin of the referenced element;</item>
                        <item>If the element is inside running text (<abbr>e.g.</abbr>, inside <gi scheme="MEI">tempo</gi>), the end of the preceding text or element;</item>
                        <item>Otherwise, the origin of the containing element.</item>
                     </list>
                     <p>The start point is offset from this origin by the value of the start coordinates (<att>ho</att>/<att>vo</att> or <att>startho</att>/<att>startvo</att>), using staff units.</p>
                     <p>Analogously, the endpoint is determined using end coordinates (<att>endho</att>/<att>endvo</att>). If <att>endid</att> is specified, it takes precedence over <att>startid</att>.</p>
                     <p>Examples of origins are:</p>
                     <list rend="bulleted">
                        <item>
                           <gi scheme="MEI">staff</gi> and <gi scheme="MEI">layer</gi>: The horizontal origin is the starting point of the measure, the vertical one is the bottom staff line;</item>
                        <item>
                           <gi scheme="MEI">note</gi>: The horizontal origin is the left end of the notehead, the vertical one is the center of the notehead;</item>
                        <item>
                           <gi scheme="MEI">clef</gi>: The horizontal origin is the left end of the clef, the vertical one the line specified by <gi scheme="MEI">clef</gi>/<att>line</att> (or <att>clef.line</att>);</item>
                        <item>For elements containing text: The left end of the baseline;</item>
                        <item>
                           <gi scheme="MEI">symbolDef</gi>: As symbol definitions aren't rendered directly, their coordinate system and origin are considered virtual.</item>
                     </list>
                     <p>When they are referenced by <gi scheme="MEI">symbol</gi> or <att>altsym</att>, the origin of the context, <abbr>i.e.</abbr>, the referencing symbol, is used. If neither absolute nor relative coordinates are specified, determining visually suitable start and end points for <att>line</att> and <att>curve</att> attributes is left to the rendering application. A value of 0 is not always assumed for absent relative coordinates. A typical example where a rendering application may not choose the origins of absent relative start and end coordinates to be the start point as well is the line connecting two notes in the above Schumann example.</p>
                  </div>
                  <div xml:id="usersymbolsCurveShape" type="div4">
                     <head>Curve Shape</head>
                     <p>If neither a <att>bezier</att> nor <att>bulge</att> attribute is present, the renderer determines a suitable shape. However, if <att>curvedir</att> is present, the curve must respect the curvature direction specified there.</p>
                     <p>The attributes <att>bezier</att> and <att>bulge</att> define the shape of a curve in two different ways. If both are present, a rendering application may choose either one. They override <att>curvedir</att>.</p>
                     <p>
                        <att>bezier</att> defines the inner control points of a cubic Bézier curve, <abbr>i.e.</abbr>, a Bézier curve with two inner control points. The coordinates are given by a space separated list, first x and y offsets for the first control point, then x and y offsets for the second one. The x and y offsets are given in staff units (or inside the context of <gi scheme="MEI">symbolDef</gi> in abstract units). The offsets for the first inner control point are relative to the start point, the ones for the second inner control point are relative to the end point.</p>
                     <p>The <att>bulge</att> attribute allows specification of the curve shape by a number of interpolation points. The interpolation points are given by their distance from the line connecting the start and end point. The distance values are stored as a space separated list.</p>
                     <p>The interpolation points are calculated as follows: If <att>bulge</att> provides <hi rend="italic">n</hi> distance values, the connection line is divided into <hi rend="italic">n+1</hi> subsegments of equal length. The interpolation points are found by drawing a perpendicular line of the respective length at each subsegment joint. Positive distance values are drawn to the left of the connection line (left when traveling from start to end), negative ones to the right.</p>
                     <p>
                        <figure>
                           <head>Rendering a bulge attribute with value \</head>
                           <graphic url="../images/modules/usersymbols/bulge.png"/>
                        </figure>
                     </p>
                     <p>The interpolation algorithm used by the rendering application is implementation dependent.</p>
                  </div>
               </div>
               <div xml:id="usersymbolsLineRendition" type="div3">
                  <head>Line Rendition</head>
                  <p>The <att>form</att> attribute of lines may take the following values:</p>
                  <list rend="bulleted">
                     <item>dashed</item>
                     <item>dotted</item>
                     <item>solid</item>
                     <item>wavy</item>
                  </list>
                  <p>These attribute values are only qualitative. Actual dash length and dot and dash spacing are implementation dependent.</p>
                  <p>The <att>width</att> attribute may take the following values:</p>
                  <list rend="bulleted">
                     <item>narrow</item>
                     <item>medium</item>
                     <item>wide</item>
                  </list>
                  <p>These values are also qualitative, however, they are also relative. That is, 'narrow' is the default value, 'medium' is twice as wide as 'narrow', and 'wide' is twice as wide as 'medium'.</p>
                  <p>In addition to these textual values, the width attribute may contain a numeric value and an optional unit value, "2mm" for example. If the unit value is not provided, staff interline units are presumed.</p>
                  <p>The <att>lstartsym</att> and <att>lendsym</att> attributes name the symbol that may start and/or end a line, while <att>lstartsymsize</att> and <att>lendsymsize</att> indicate the relative size of the symbol using a numeric value in the range from 1 to 9.</p>
               </div>
               <div xml:id="usersymbolsLimitations" type="div3">
                  <head>Limitations</head>
                  <p>The usersymbols module does not currently support continuous composite lines or filled areas. As mentioned above, the rendition of lines is highly implementation dependent. Coordinate system transforms are restricted to scaling using <att>scale</att>.</p>
               </div>
            </div>
         </div>
      </body>
   </text>
</TEI>
