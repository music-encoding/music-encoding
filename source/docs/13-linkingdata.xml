<!--
© 2017 by the Music Encoding Initiative (MEI) Council.
  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at http://opensource.org/licenses/ECL-2.0.

  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.

  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.

  CONTACT: info@music-encoding.org                        
                    --><?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?><?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?><TEI xmlns:rng="http://relaxng.org/ns/structure/1.0"
     xmlns:sch="http://purl.oclc.org/dsdl/schematron"
     xmlns="http://www.tei-c.org/ns/1.0"
     version="5.0"
     rend="book"
     xml:lang="en">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title level="s">The Music Encoding Initiative Guidelines</title>
            <title level="a">Linking Data</title>
            <respStmt>
               <resp>Edited by</resp>
               <!--TODO: To be filled manually-->
            </respStmt>
            <respStmt>
               <resp>With contributions by</resp>
               <!--TODO: To be filled automatically via GitHub API-->
               <name ref="https://api.github.com/users/bwbohl">Benjamin W. Bohl</name>
               <name ref="https://api.github.com/users/BruxDDay">BruxDDay</name>
               <name ref="https://api.github.com/users/dinamix">dinamix</name>
               <name ref="https://api.github.com/users/ndubo">Norbert Dubowy</name>
               <name ref="https://api.github.com/users/fujinaga">Ichiro Fujinaga</name>
               <name ref="https://api.github.com/users/axgeertinger">Axel Geertinger</name>
               <name ref="https://api.github.com/users/ahankinson">Andrew Hankinson</name>
               <name ref="https://api.github.com/users/irmlindcapelle">irmlindcapelle</name>
               <name ref="https://api.github.com/users/frakel">franz kelnreiter</name>
               <name ref="https://api.github.com/users/kepper">kepper</name>
               <name ref="https://api.github.com/users/zolaemil">Zoltan Komives</name>
               <name ref="https://api.github.com/users/DDMAL-LabManager">DDMAL LabManager</name>
               <name ref="https://api.github.com/users/uliska">Urs Liska</name>
               <name ref="https://api.github.com/users/elsinhadl">Elsa De Luca</name>
               <name ref="https://api.github.com/users/napulen">Néstor Nápoles López</name>
               <name ref="https://api.github.com/users/MajaHartwig">MajaHartwig</name>
               <name ref="https://api.github.com/users/musicEnfanthen">Stefan Münnich</name>
               <name ref="https://api.github.com/users/pe-ro">pe-ro</name>
               <name ref="https://api.github.com/users/lpugin">Laurent Pugin</name>
               <name ref="https://api.github.com/users/JRegimbal">Juliette Regimbal</name>
               <name ref="https://api.github.com/users/rettinghaus">Klaus Rettinghaus</name>
               <name ref="https://api.github.com/users/aseipelt">Agnes Seipelt</name>
               <name ref="https://api.github.com/users/martha-thomae">Martha E. Thomae</name>
               <name ref="https://api.github.com/users/raffazizzi">Raffaele Viglianti</name>
               <name ref="https://api.github.com/users/vigliensoni">Gabriel Vigliensoni</name>
               <name ref="https://api.github.com/users/th-we">Thomas Weber</name>
               <name ref="https://api.github.com/users/musicog">David M. Weigl</name>
            </respStmt>
         </titleStmt>
         <publicationStmt>
            <distributor>Music Encoding Initiative (MEI) Council</distributor>
            <availability>
               <p>
                  <hi>Music Encoding Initiative (MEI)</hi>
               </p>
               <p>NOTICE: Copyright (c) 2018 by the Music Encoding Initiative (MEI) Council.</p>
               <p>Licensed under the Educational Community License, Version 2.0 (the "License"); you may
                                            not use this file except in compliance with the License. You may obtain a copy of the
                                            License at <ref target="http://opensource.org/licenses/ECL-2.0">http://opensource.org/licenses/ECL-2.0</ref>.</p>
               <p>Unless required by applicable law or agreed to in writing, software distributed under
                                            the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
                                            KIND, either express or implied. See the License for the specific language governing
                                            permissions and limitations under the License.</p>
               <p>This is a derivative work based on earlier versions of the schema copyright (c)
                                            2001-2006 Perry Roland and the Rector and Visitors of the University of Virginia;
                                            licensed under the Educational Community License version 1.0.</p>
               <p>CONTACT: contact@music-encoding.org </p>
            </availability>
         </publicationStmt>
      </fileDesc>
   </teiHeader>
   <text>
      <body>
         <div xml:id="linkingdata" type="div1">
            <head>Linking Data</head>
            <p>This chapter describes the use of elements in MEI for linking and referencing. This includes the elements, models, and attributes that are part of the 'MEI.ptrref' module. This module contains declarations, techniques and approaches to establish references within a single MEI document, or to link out from one MEI document to another or to other external sources. This chapter also addresses possibilities to link into an MEI document from external sources which makes MEI highly interoperable and serviceable in the context of Linked (Open) Data approaches.</p>
            <div xml:id="links" type="div2">
               <head>Links</head>
               <p>An element is a ‘link’ when it has an attribute whose value is a reference to the ID of one or more other elements (cross-reference). These link elements indicate an association between themselves (or one of their ancestors) and one or more other entities, either inside the same document or elsewhere. An association between two elements in the same document is said to be an ‘internal’ link, while an association that involves an entity outside the current document is called an ‘external’ link. However, either of the elements discussed in the following section can be used for either purpose.</p>
            </div>
            <div xml:id="linkFromMei" type="div2">
               <head>Linking from MEI</head>
               <p>This section describes techniques and approaches to establish references within a single MEI document, or to link out from one MEI document to another or to other external sources.</p>
                <div xml:id="ptrRef" type="div3">
                    <head>Pointers and References</head>
                    <p>The link elements discussed in this section are the <gi scheme="MEI">ptr</gi> and the <gi scheme="MEI">ref</gi> elements which are declared in the MEI.ptrref module.</p>
                    <p>
                        <specList>
                            <specDesc key="ptr"/>
                            <specDesc key="ref"/>
                        </specList>
                    </p>
                    <p>
                        The <gi scheme="MEI">ptr</gi> element is a traversible pointer to another location. It is an empty linking element that uses only attributes to describe its link destination. It cannot contain text or sub-elements to describe the referenced object. The next example shows the use of the <gi scheme="MEI">ptr</gi> element to target a certain identifier (here e.g. a page number, or more precisely, page break elements, <gi scheme="MEI">pb</gi>, bearing these identifiers) from within a <gi scheme="MEI">list</gi> of item descriptions:
                    </p>
                    <p>
                        <figure>
                            <head/>
                            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example001.txt" parse="text"/></egXML>
                        </figure>
                    </p>
                    <p>
                        The <gi scheme="MEI">ref</gi> element defines a traversible reference to another location. While <gi scheme="MEI">ptr</gi> cannot contain other markup, the <gi scheme="MEI">ref</gi> element can include text or sub-elements that further specify the link destination:
                    </p>
                    <p>
                        <figure>
                            <head/>
                            <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example002.txt" parse="text"/></egXML>
                        </figure>
                    </p>
                </div>
                <div xml:id="ptrrefModule" type="div3">
                    <head>Specifying Link Elements</head>
                    <p>
                        The <gi scheme="MEI">ptr</gi> and <gi scheme="MEI">ref</gi> elements share a set of common attributes that are inherited from the <ident type="class">att.pointing</ident> class (a more detailed explanation is provided below):
                    </p>
                    <p>
                        <specList>
                            <specDesc key="att.pointing" atts="target targettype xlink:actuate xlink:show xlink:role"/>
                        </specList>
                    </p>
                    <p>
                        In addition to the attributes in the <ident type="class">att.pointing</ident> class, the <hi rend="bold">@mimetype</hi> attribute from the <ident type="class">att.internetMedia</ident> class is also available on <gi scheme="MEI">ptr</gi> and <gi scheme="MEI">ref</gi> (a more detailed explanation is provided below):
                    </p>
                    <p>
                        <specList>
                            <specDesc key="att.internetMedia" atts="mimetype"/>
                        </specList>
                    </p>
                    <p>
                        The <ident type="class">att.linking</ident> class provides another set of common attributes (a more detailed explanation is provided in <ptr target="#analysisharm"/>: <ptr target="#analysisDescribingRelationships"/>):
                    </p>
                    <p>
                        <specList>
                            <specDesc key="att.linking" atts="copyof corresp follows next precedes prev sameas synch"/>
                        </specList>
                    </p>
                    <p>
                        Additionally, the following attributes are also available on <gi scheme="MEI">ptr</gi> and <gi scheme="MEI">ref</gi>:
                    </p>
                    <p>
                        Via the <ident type="class">att.metadataPointing</ident> class:
                    </p>
                    <p>
                        <specList>
                            <specDesc key="att.metadataPointing" atts="decls"/>
                        </specList>
                    </p>
                    <p>
                        Via the <ident type="class">att.classed</ident> class:
                    </p>
                    <p>
                        <specList>
                            <specDesc key="att.classed" atts="class"/>
                        </specList>
                    </p>
                    <p>
                        Via the <ident type="class">att.responsibility</ident> class:
                    </p>
                    <p>
                        <specList>
                            <specDesc key="att.responsibility" atts="resp"/>
                        </specList>
                    </p>
                    <div xml:id="ptrRefTarget" type="div4">
                        <head>Define the link element's target (XPointer mechanism)</head>
                        <p>
                            The <att>target</att> attribute specifies the destination of a pointer or reference using a method standardized by the W3C consortium, known as the XPointer mechanism. The XPointer framework is described at <ref target="http://www.w3.org/TR/xptr-framework/">http://www.w3.org/TR/xptr-framework/</ref>. This mechanism permits a range of complexity, from the very simple (a reference to the value of the target element’s <att>xml:id</att> attribute) to the more complex usage of a full URI with embedded XPointers:
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example003.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example004.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example005.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example006.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example007.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            A <att>target</att> attribute is not required in order to mark the textual content as a cross-reference, as demonstrated in the example below; however, without this attribute the reference will not be resolvable.
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example008.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                    </div>
                    <div xml:id="ptrRefTargettype" type="div4">
                        <head>Define the type of a link element's target</head>
                        <p>
                            The <att>targettype</att> attribute allows the target resource to be characterized using any convenient classification scheme or typology. This is often useful when the target requires special processing, e.g., for display purposes. The pointers in the examples below may be formatted differently, e.g., the bibliographic citation may result in special typography while the pointer to the audio file may be used to embed an audio player:
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example009.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example010.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                    </div>
                    <div xml:id="ptrRefMimetype" type="div4">
                        <head>Define the mimetype of a link element's target</head>
                        <p>
                            The function of the <att>mimetype</att> attribute is similar to that of <att>targettype</att> in that they both allow classification of the destination. Unlike <att>targettype</att>, however, <att>mimetype</att> explicitly defines the destination type using a standard taxonomy. Its value should be a valid MIME (Multimedia Internet Mail Extension) type as defined by the Internet Engineering Task Force (IETF) in RFC 2046, available at <ref target="http://www.ietf.org/rfc/rfc2046.txt">http://www.ietf.org/rfc/rfc2046.txt</ref>. The following are all valid mimetype values:
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example011.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            As shown above, the <gi scheme="MEI">ptr</gi> element can be used to ‘point to’ a digital image (<code>target="my.png"</code>). However, when the intention is to <hi rend="italic">display</hi> a digital image as part of the rendering of an MEI file, the <gi scheme="MEI">graphic</gi> element provides a convenient and recommended alternative:
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example012.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            The <att>mimetype</att> attribute is particularly useful for documenting the nature of the destination when the value of <att>target</att> does not provide a filename extension or when the destination is a non-standard file type:
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example013.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                    </div>
                    <div xml:id="ptrRefXlinkActuateShow" type="div4">
                        <head>Determine the link element's behaviour</head>
                        <p>
                            The <att>xlink:actuate</att> and <att>xlink:show</att> attributes are used in conjunction to determine the link’s behavior.
                        </p>
                        <p>
                            The <att>xlink:actuate</att> attribute defines whether the resolution of a link occurs automatically or must be requested by the user.
                        </p>
                        <p>
                            The following values are allowed for the <att>xlink:actuate</att> attribute:
                        </p>
                        <p>
                            <list type="gloss">
                                <label>‘onLoad’</label>
                                <item>load the target resource(s) immediately</item>
                                <label>‘onRequest’</label>
                                <item>load the target resource(s) upon user request, e.g., after a mouse click</item>
                                <label>‘none’</label>
                                <item>do not permit loading of the target resource(s); no other markup is provided to determine appropriate behavior</item>
                                <label>‘other’</label>
                                <item>behavior other than permitted by the other values of this attribute; application should look for other markup to determine appropriate behavior</item>
                            </list>
                        </p>
                        <p>
                            The value “none” may be used to indicate that the link is un-traversable and no other markup is provided to determine appropriate behavior; it may or may not render the link invisible to the user. When the value of <att>xlink:actuate</att> is “other”, an application must base a determination of appropriate behavior on factors other than the value of <att>xlink:actuate</att>.
                        </p>
                        <p>
                            The <att>xlink:show</att> attribute defines how a remote resource is to be rendered. The following values are permitted:
                        </p>
                        <p>
                            <list type="gloss">
                                <label>‘new’</label>
                                <item>target of the link appears in a new window</item>
                                <label>‘replace’</label>
                                <item>target of the link replaces the current resource in the same window</item>
                                <label>‘embed’</label>
                                <item>the content of the target appears at the point of the link</item>
                                <label>‘none’</label>
                                <item>do not permit traversal to the target resource(s); no other markup is provided to determine appropriate behavior</item>
                                <label>‘other’</label>
                                <item>behavior other than permitted by the other values of this attribute; application should look for other markup to determine appropriate behavior</item>
                            </list>
                        </p>
                        <p>
                            The value “none” may be used to indicate a link that is not displayed or is not displayable and no other markup is provided to determine appropriate behavior. When the value of <att>xlink:show</att> is “other”, an application must base a determination of appropriate behavior on factors other than the value of <att>xlink:show</att>.
                        </p>
                        <p>
                            The following example illustrates a pointer that results in the automatic creation of a new window with the content of the target loaded in it:
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example014.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                    </div>
                    <div xml:id="ptrRefXlinkRole" type="div4">
                        <head>Determine the link element's role</head>
                        <p>
                            The <att>xlink:role</att> attribute describes the meaning of resources within the context of a link. It is used to label or describe a link or resource in a human- and machine-readable fashion. The value of <att>xlink:role</att> must be an absolute URI (Uniform Resource Identifier) reference as defined by the Internet Engineering Task Force (IETF) in RFC 3986, available at <ref target="http://tools.ietf.org/html/rfc3986">http://tools.ietf.org/html/rfc3986</ref>. The URI reference identifies a resource that describes the intended property. When no value is supplied, no particular role value is to be inferred.
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example015.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            <figure>
                                <head/>
                                <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/linkalign/linkalign-example016.txt" parse="text"/></egXML>
                            </figure>
                        </p>
                        <p>
                            In the preceding examples, the value of the <att>xlink:role</att> attribute may be used to specify the value of the link target’s role.
                        </p>
                    </div>
               </div>
            </div>
            <div xml:id="linkAlign" type="div2">
               <head>Linking and Alignment</head>
               <p>The linkAlign module has been deprecated in MEI v3.</p>
            </div>
         </div>
      </body>
   </text>
</TEI>
