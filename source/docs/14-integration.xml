<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  NOTICE: Copyright (c) 2017-2024 by the Music Encoding Initiative (MEI) Board (formerly known as "MEI Council").

  Licensed under the Educational Community License, Version 2.0 (the "License"); you may
  not use this file except in compliance with the License. You may obtain a copy of the License
  at https://opensource.org/licenses/ECL-2.0.
  
  Unless required by applicable law or agreed to in writing, software distributed under the
  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
  OF ANY KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
  
  This is a derivative work based on earlier versions of the schema © 2001-2006 Perry Roland
  and the Rector and Visitors of the University of Virginia; licensed under the Educational
  Community License version 1.0.
  
  CONTACT: info@music-encoding.org
-->
<?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<TEI xmlns:rng="http://relaxng.org/ns/structure/1.0"
   xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns="http://www.tei-c.org/ns/1.0"
   version="5.0" rend="book" xml:lang="en">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title level="s">The Music Encoding Initiative Guidelines</title>
            <title level="a">Integrating MEI with other Standards and Formats</title>
            <respStmt>
               <resp>Edited by</resp>
               <name role="edt">Johannes Kepper</name>
               <!-- tbd -->
               <note>The editors listed here are responsible for the contents of this very chapter of the MEI Guidelines.</note>
            </respStmt>
            <respStmt>
               <resp>With contributions by</resp>
               <!--TODO: To be filled automatically via GitHub API-->
               <name ref="https://api.github.com/users/bwbohl">Benjamin W. Bohl</name>
               <name ref="https://api.github.com/users/BruxDDay">BruxDDay</name>
               <name ref="https://api.github.com/users/ndubo">Norbert Dubowy</name>
               <name ref="https://api.github.com/users/fujinaga">Ichiro Fujinaga</name>
               <name ref="https://api.github.com/users/axgeertinger">Axel Geertinger</name>
               <name ref="https://api.github.com/users/ahankinson">Andrew Hankinson</name>
               <name ref="https://api.github.com/users/irmlindcapelle">irmlindcapelle</name>
               <name ref="https://api.github.com/users/frakel">franz kelnreiter</name>
               <name ref="https://api.github.com/users/kepper">kepper</name>
               <name ref="https://api.github.com/users/zolaemil">Zoltan Komives</name>
               <name ref="https://api.github.com/users/DDMAL-LabManager">DDMAL LabManager</name>
               <name ref="https://api.github.com/users/uliska">Urs Liska</name>
               <name ref="https://api.github.com/users/elsinhadl">Elsa De Luca</name>
               <name ref="https://api.github.com/users/napulen">Néstor Nápoles López</name>
               <name ref="https://api.github.com/users/MajaHartwig">MajaHartwig</name>
               <name ref="https://api.github.com/users/musicEnfanthen">Stefan Münnich</name>
               <name ref="https://api.github.com/users/pe-ro">pe-ro</name>
               <name ref="https://api.github.com/users/lpugin">Laurent Pugin</name>
               <name ref="https://api.github.com/users/JRegimbal">Juliette Regimbal</name>
               <name ref="https://api.github.com/users/rettinghaus">Klaus Rettinghaus</name>
               <name ref="https://api.github.com/users/aseipelt">Agnes Seipelt</name>
               <name ref="https://api.github.com/users/martha-thomae">Martha E. Thomae</name>
               <name ref="https://api.github.com/users/raffazizzi">Raffaele Viglianti</name>
               <name ref="https://api.github.com/users/vigliensoni">Gabriel Vigliensoni</name>
               <name ref="https://api.github.com/users/th-we">Thomas Weber</name>
               <name ref="https://api.github.com/users/musicog">David M. Weigl</name>
            </respStmt>
         </titleStmt>
         <publicationStmt>
            <distributor>Music Encoding Initiative (MEI) Council</distributor>
            <availability>
               <p>
                  <hi>Music Encoding Initiative (MEI)</hi>
               </p>
               <p>NOTICE: Copyright (c) 2017–2024 by the Music Encoding Initiative (MEI) Council.</p>
               <p>Licensed under the Educational Community License, Version 2.0 (the "License"); you
                  may not use this file except in compliance with the License. You may obtain a copy
                  of the License at <ref target="http://opensource.org/licenses/ECL-2.0"
                     >http://opensource.org/licenses/ECL-2.0</ref>.</p>
               <p>Unless required by applicable law or agreed to in writing, software distributed
                  under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
                  CONDITIONS OF ANY KIND, either express or implied. See the License for the
                  specific language governing permissions and limitations under the License.</p>
               <p>This is a derivative work based on earlier versions of the schema copyright (c)
                  2001-2006 Perry Roland and the Rector and Visitors of the University of Virginia;
                  licensed under the Educational Community License version 1.0.</p>
               <p>CONTACT: contact@music-encoding.org </p>
            </availability>
         </publicationStmt>
         <sourceDesc>
            <p>Born digital: No previous source exists.</p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
   <text>
      <body>
         <div xml:id="integration" type="div1">
            <head>Integrating MEI with other Standards and Formats</head>
            <p>In this chapter, the combination of MEI with other relevant formats in the field is
               covered. Here, the MEI Guidelines try to serve as Best Practice Recommendations; they
               don't claim to provide full and / or authoritative documentation for those other
               formats. The intention is to provide good starting points and share experience across
               various projects, trying to unify both tools and workflows for better efficiency.
               Accordingly, if the information found here provides as outdated or incomplete, please
                  <ref target="https://music-encoding.org/community/community-contacts.html">get in
                  touch</ref>. </p>
            <div xml:id="tei" type="div2">
               <head>TEI</head>
               <p>The TEI’s Special Interest Group on Music has come up with an ODD customization
                  for TEI, which allows to embed MEI excerpts into TEI. However, the SIG Music is
                  officially considered <hi rend="italic">dormant</hi>, so the information provided
                  is somewhat outdated. The most recent resources are available from <ref
                     target="https://github.com/TEI-Music-SIG/tei-mei/">GitHub</ref>.</p>
               <p>As of yet, no official MEI customization to include elements from the TEI
                  namespace into MEI has been written, even though this is definitely wanted. </p>
            </div>
            <div xml:id="iiif" type="div2">
               <head>IIIF</head>
               <p>This chapter will explain how to use MEI in an IIIF-compatible way.</p>
            </div>
            <div xml:id="smufl" type="div2">
               <head>SMuFL</head>
               <p>This section describes how to use MEI with the Standard Music Font Layout (SMuFL,
                     <ref target="https://www.smufl.org/">https://www.smufl.org/</ref>)
                  specification.</p>
            </div>
            <div xml:id="svg" type="div2">
               <head>SVG</head>
               <p>In order to use Scalable Vector Graphics (SVG) in MEI, a new <hi rend="italic">module</hi> needs to be
                  compiled into ODD (see <ptr target="#meiCustomization"/> for an
                  introduction on how to do that). In order to do that, you need to enter the
                  following <gi scheme="TEI">moduleRef</gi> into the <gi scheme="TEI"
                     >schemaSpec</gi> of your ODD file:</p>
               <p>
                  <figure>
                     <head/>
                     <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code noBase noLang" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/svg/svg-moduleRef.xml" parse="xml"/></egXML>
                  </figure>
               </p>
               <p>With this addition, which can be added to any of the provided customizations of
                  MEI (see <ptr target="#meiProfiles"/>), the <ref
                     target="https://www.w3.org/TR/SVG11/struct.html#SVGElement">&lt;svg&gt;</ref>
                  element becomes available everywhere `model.graphicLike` (<abbr>i.e.</abbr>, the <gi
                     scheme="MEI">graphic</gi> element) is currently allowed, that is: inside of <gi
                     scheme="MEI">fig</gi>, <gi scheme="MEI">incip</gi>, <gi scheme="MEI"
                     >surface</gi>, and <gi scheme="MEI">zone</gi>.</p>
               <p> In the following example, an <ref
                     target="https://www.w3.org/TR/SVG11/paths.html#PathElement"
                     >&lt;svg:path&gt;</ref> element is inserted into a <gi scheme="MEI"
                     >surface</gi>. It would now be possible for measures or other music features to
                  point to the rectangular <gi scheme="MEI">zone</gi> in MEI namespace, or the fancy
                  shaped <ref target="https://www.w3.org/TR/SVG11/paths.html#PathElement"
                     >&lt;svg:path&gt;</ref> using their <att>facs</att> attribute (see <ptr
                     target="#facsimileElements"/> for that mechanism). It’s equally possible to use
                  SVG content inside figures on title pages or anywhere else.</p>
               <p>
                  <figure>
                     <head/>
                     <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code noBase noLang" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/svg/svg-example.xml" parse="xml"/></egXML>
                  </figure>
               </p>
               <p>Of course it’s possible to allow elements in SVG namespace in other places in MEI
                  as well, by adjusting the model classes that the SVG namespace shall join.</p>
            </div>
            <div xml:id="midiGuidelines" type="div2">
               <head>Musical Instrument Digital Interface (MIDI)</head>
               <p>This chapter describes the MIDI encoding functionality present in MEI. The purpose
                  of this module is to allow for integrating MIDI data into MEI-encoded notation, to
                  both aid software in translating MEI to MIDI, and to permit the capture of
                  information in files that have been translated from MIDI to MEI. The MIDI model in
                  MEI is similar to that of Mup, and the user is directed to the <ref
                     target="http://www.arkkra.com/doc/uguide.ps">Mup User Guide</ref> for further
                  reading.</p>
               <p>The MIDI module defines certain generally-accepted MIDI units that may be used
                  outside of a MIDI context. For example, the <att>dur.ppq</att> attribute accepts
                  MIDI <hi rend="italic">ppq</hi> (Pulses Per Quarter) as a valid measurement of
                  duration. Similarly, the <att>pnum</att> attribute allows MIDI note numbers for
                  specifying a pitch value.</p>
               <div xml:id="midi.scoreDefppq" type="div3">
                  <head>PPQ in scoreDef and staffDef</head>
                  <p>To define the MIDI resolution of a score, the <att>ppq</att> attribute may be
                     used on the <gi scheme="MEI">scoreDef</gi> element. This value can be used to
                     interpret the values found in the <att>dur.ppq</att> attribute on elements in
                     the <ident type="class">att.duration.ges</ident> class.</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve" valid="feasible"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/midiGuidelines/midiGuidelines-sample286.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>The <att>ppq</att> attribute is also available on the <gi scheme="MEI"
                        >staffDef</gi> element in order to aid in the conversion to MEI from other
                     representations that allow a different time base for each staff. However, these
                     independent values for <att>ppq</att> are only interpretable in terms of a
                     common time base. Therefore, the <att>ppq</att> attribute is required on <gi
                        scheme="MEI">scoreDef</gi> when the values of <att>ppq</att> on the staff
                     definitions differ. In the following example, the values of the <att>ppq</att>
                     attributes on the <gi scheme="MEI">staffDef</gi> elements are all factors of
                     the value of <att>ppq</att> attached to <gi scheme="MEI">scoreDef</gi>.</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/midiGuidelines/midiGuidelines-sample287.txt" parse="text"/></egXML>
                     </figure>
                  </p>
               </div>
               <div xml:id="midiInstruments" type="div3">
                  <head>Recording General MIDI Instrumentation</head>
                  <p>The <gi scheme="MEI">instrDef</gi> element can be used to record MIDI
                     instrument names or numbers using the <att>midi.instrname</att> and
                        <att>midi.instrnum</att> attributes. The <att>midi.instrname</att> attribute
                     must contain an instrument name from the list provided by the data.MIDINAMES
                     data type. By default, data.MIDINAMES contains General MIDI Instrument
                     designations.</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/midiGuidelines/midiGuidelines-sample288.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>The <att>midi.instrnum</att> is provided for those cases when an instrument
                     number is needed. It must contain valid MIDI values; that is, 0-127. In these
                     cases, a General MIDI Instrument name is redundant.</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/midiGuidelines/midiGuidelines-sample289.txt" parse="text"/></egXML>
                     </figure>
                  </p>
               </div>
               <div xml:id="midiData" type="div3">
                  <head>Recording MIDI Event Data</head>
                  <p>MIDI messages are encapsulated in the <gi scheme="MEI">midi</gi> element, which
                     is typically used in contexts like <gi scheme="MEI">layer</gi> and <gi
                        scheme="MEI">measure</gi>. In earlier versions of MEI, the <gi scheme="MEI"
                        >noteOn</gi> and <gi scheme="MEI">noteOff</gi> elements were used to record
                     MIDI note on/off events. The use of these elements is now discouraged in favor
                     of using the <gi scheme="MEI">note</gi> element directly. MIDI duration should
                     be recorded using the <att>dur.ges</att> attribute, and MIDI pitch information
                     should be recorded using the <att>pnum</att> attribute.</p>
                  <p>MIDI control changes (<gi scheme="MEI">cc</gi>) are encoded using the
                        <att>num</att> and <att>val</att> attributes. Control change numbers are
                     specified in the General MIDI documentation. In the example below, the <gi
                        scheme="MEI">cc</gi> elements encode increasing controller event 7 (volume)
                     values, or in musical terms, a crescendo. Other MIDI event messages follow this
                     same pattern, using the <att>num</att> and <att>val</att> attributes to record
                     the raw MIDI data.</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/midiGuidelines/midiGuidelines-sample290.txt" parse="text"/></egXML>
                     </figure>
                  </p>
                  <p>In the preceding example, each control change is associated with a time stamp.
                     The <att>tstamp</att> attribute is required in order to indicate when the MIDI
                     event should take place. It is often necessary to indicate a time stamp
                     slightly earlier than the affected notes to compensate for MIDI delay.</p>
                  <p>For better legibility and error checking, the <gi scheme="MEI">midi</gi>
                     element may be used, as in the following example, to group MIDI parameter
                     changes. Even so, the <att>tstamp</att> attribute is required on all parameters
                     in order to associate them with their point of actuation:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/midiGuidelines/midiGuidelines-sample291.txt" parse="text"/></egXML>
                     </figure>
                  </p>
               </div>
               <div xml:id="midiNonCMN" type="div3">
                  <head>MIDI in Mensural and Neume Notation</head>
                  <p>In mensural, neume, and other historical or non-Western repertoires, there is
                     often no measure-based time stamp with which to associate MIDI controller data.
                     Therefore, in these notations MIDI controller data is assumed to be associated
                     with the event that immediately follows in the same layer. Thus, a crescendo in
                     mensural notation may be encoded like so:</p>
                  <p>
                     <figure>
                        <head/>
                        <egXML xmlns="http://www.tei-c.org/ns/Examples" rend="code" xml:space="preserve"><xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../examples/midiGuidelines/midiGuidelines-sample292.txt" parse="text"/></egXML>
                     </figure>
                  </p>
               </div>
            </div>
         </div>
      </body>
   </text>
</TEI>
