<?xml version="1.0" encoding="UTF-8"?>
<!-- 
     NOTICE: Copyright (c) 2017-2024 by the Music Encoding Initiative (MEI) Board (formerly known as "MEI Council").
     
     Licensed under the Educational Community License, Version 2.0 (the "License"); you may
     not use this file except in compliance with the License. You may obtain a copy of the License
     at https://opensource.org/licenses/ECL-2.0.
     
     Unless required by applicable law or agreed to in writing, software distributed under the
     License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
     OF ANY KIND, either express or implied. See the License for the specific language
     governing permissions and limitations under the License.
     
     This is a derivative work based on earlier versions of the schema Â© 2001-2006 Perry Roland
     and the Rector and Visitors of the University of Virginia; licensed under the Educational
     Community License version 1.0.
     
     CONTACT: info@music-encoding.org
-->
<?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<?xml-model href="../validation/mei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<specGrp xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0"
         xmlns:sch="http://purl.oclc.org/dsdl/schematron" xml:id="module.MEI.stringtab">
  <moduleSpec ident="MEI.stringtab">
    <desc xml:lang="en">Tablature component declarations.</desc>
  </moduleSpec>
  <dataSpec ident="data.COURSENUMBER" module="MEI.stringtab">
    <desc xml:lang="en">In string tablature, the number of the course to be played, <abbr>i.e.</abbr>, [1-9]+.</desc>
    <content>
      <rng:data type="positiveInteger"/>
    </content>
  </dataSpec>
  <dataSpec ident="data.COURSETUNING" module="MEI.stringtab">
    <desc xml:lang="en">Standard course tunings.</desc>
    <content>
      <valList type="semi">
        <valItem ident="guitar.standard">
          <desc xml:lang="en">Standard tuning for current guitars. The courses are tuned to E2 A2 D3 G3 B3 E4.</desc>
        </valItem>
        <valItem ident="guitar.drop.D">
          <desc xml:lang="en">Drop D tuning for guitars. The lowest course is tuned down to D, while all other courses are kept to their regular pitches. D2 A2 D3 G3 B3 E4.</desc>
        </valItem>
        <valItem ident="guitar.open.D">
          <desc xml:lang="en">Open D tuning for guitars. D2 A2 D3 F3s A3 D4.</desc>
        </valItem>
        <valItem ident="guitar.open.G">
          <desc xml:lang="en">Open G tuning for guitars. D2 G2 D2 G2 B3 D4.</desc>
        </valItem>
        <valItem ident="guitar.open.A">
          <desc xml:lang="en">Open A tuning for guitars. E2 A2 E3 A3 C4s E4.</desc>
        </valItem>
        <valItem ident="lute.renaissance.6">
          <desc xml:lang="en">Renaissance tuning for lutes with 6 courses. G2 C3
            F3 A3 D4 G4.</desc>
        </valItem>
        <valItem ident="lute.baroque.d.minor">
          <desc xml:lang="en">Baroque tuning for lutes with 6 stable courses, and additional bass courses tuned to the key of D minor. A2 D3 F3 A3 D4 F4 for the main six courses, and bass courses descending in pitch from G2, F2, etc., depending on the size of the instrument. </desc>
        </valItem>
      </valList>
    </content>
  </dataSpec>
  <classSpec ident="att.course.log" module="MEI.stringtab" type="atts">
    <desc xml:lang="en">Logical domain attributes.</desc>
    <classes>
      <memberOf key="att.pitched"/>
    </classes>
  </classSpec>
  <classSpec ident="att.scoreDef.vis.tablature" module="MEI.stringtab" type="atts">
    <desc xml:lang="en">Visual domain attributes for scoreDef in the tablature repertoire.</desc>
  </classSpec>
  <classSpec ident="att.stringtab" module="MEI.stringtab" type="atts">
    <desc xml:lang="en">String tablature string and fret information.</desc>
    <attList>
      <attDef ident="tab.align" usage="opt">
        <desc xml:lang="en">Attribute that describes the vertical alignment of tablature symbols. Only applicable in cases where the symbols' vertical position does not communicate other information, such as courses (<abbr>i.e.</abbr>, only in German lute tablature). Typical values are <val>top</val> and <val>bottom</val>.</desc>
        <datatype>
          <rng:ref name="data.VERTICALALIGNMENT"/>
        </datatype>
      </attDef>
      <!-- Below here is unchecked / legacy -->
      <attDef ident="tab.fing" usage="opt">
        <desc xml:lang="en">This attribute is deprecated and will be removed in a future version. Indicates which finger, if any, should be used to play an individual string. The index, middle, ring, and little fingers are represented by the values 1-4, while <val>t</val> is for the thumb. The values <val>x</val> and <val>o</val> indicate muffled and open strings, respectively.</desc>
        <datatype>
          <rng:ref name="data.FINGER.FRET"/>
        </datatype>
      </attDef>
      <attDef ident="tab.fret" usage="opt">
        <desc xml:lang="en">Records the location at which a string should be stopped against a fret.</desc>
        <datatype>
          <rng:ref name="data.FRETNUMBER"/>
        </datatype>
      </attDef>
      <attDef ident="tab.line" usage="opt">
        <desc xml:lang="en">Used in German lute tablature in cases where vertical positioning deviates from the norm which can be specified by <att>tab.align</att>. Indicates the position of the note on one of the horizontal strands corresponding to the <att>lines</att> attribute on <gi scheme="MEI">staffDef</gi>. (Note that in this case, the lines are conceptual rather than visible).</desc>
        <datatype>
          <rng:ref name="data.CLEFLINE"/>
        </datatype>
      </attDef>
      <attDef ident="tab.string" usage="opt">
        <desc xml:lang="en">This attribute is deprecated in favour of <att>tab.course</att> and will be removed in a future version. Records which string is to be played.</desc>
        <datatype>
          <rng:ref name="data.STRINGNUMBER"/>
        </datatype>
      </attDef>
      <attDef ident="tab.course" usage="opt">
        <desc xml:lang="en">Records which course is to be played.</desc>
        <datatype>
          <rng:ref name="data.COURSENUMBER"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec>
  <classSpec ident="att.stringtab.position" module="MEI.stringtab" type="atts">
    <desc xml:lang="en">String tablature position information.</desc>
    <attList>
      <attDef ident="tab.pos" usage="opt">
        <desc xml:lang="en">Records fret position.</desc>
        <datatype>
          <rng:data type="positiveInteger"/>
        </datatype>
      </attDef>
    </attList>
  </classSpec>
  <classSpec ident="att.stringtab.tuning" module="MEI.stringtab" type="atts">
    <desc xml:lang="en">This collection of attributes is deprecated in favour of the new <gi scheme="MEI">tuning</gi> element and will be removed in a future version. String tablature tuning information.</desc>
    <attList>
      <attDef ident="tab.strings" usage="opt">
        <desc xml:lang="en">This attribute is deprecated in favour of the new <gi scheme="MEI">tuning</gi> element and will be removed in a future version. Provides a *written* pitch and octave for each open string or course of
          strings.</desc>
        <datatype>
          <rng:list>
            <rng:oneOrMore>
              <rng:data type="token">
                <rng:param name="pattern">
                  [a-g][0-9](s|f|ss|x|ff|xs|sx|ts|tf|n|nf|ns|su|sd|fu|fd|nu|nd|1qf|3qf|1qs|3qs)?([a-g][0-9](s|f|ss|x|ff|xs|sx|ts|tf|n|nf|ns|su|sd|fu|fd|nu|nd|1qf|3qf|1qs|3qs)?)*</rng:param>
              </rng:data>
            </rng:oneOrMore>
          </rng:list>
        </datatype>
      </attDef>
      <attDef ident="tab.courses" usage="opt">
        <desc xml:lang="en">This attribute is deprecated in favour of the new <gi scheme="MEI">tuning</gi> element and will be removed in a future version. Provides a *written* pitch and octave for each open string or course of strings.</desc>
        <datatype>
          <rng:list>
            <rng:oneOrMore>
              <rng:data type="token">
                <rng:param name="pattern">
                  [a-g][0-9](s|f|ss|x|ff|xs|sx|ts|tf|n|nf|ns|su|sd|fu|fd|nu|nd|1qf|3qf|1qs|3qs)?([a-g][0-9](s|f|ss|x|ff|xs|sx|ts|tf|n|nf|ns|su|sd|fu|fd|nu|nd|1qf|3qf|1qs|3qs)?)*</rng:param>
              </rng:data>
            </rng:oneOrMore>
          </rng:list>
        </datatype>
      </attDef>
    </attList>
  </classSpec>
  <classSpec ident="att.tabDurSym.log" module="MEI.stringtab" type="atts">
    <desc xml:lang="en">Logical domain attributes.</desc>
    <classes>
      <memberOf key="att.layerIdent"/>
      <memberOf key="att.partIdent"/>
    </classes>
  </classSpec>
  <classSpec ident="att.tabGrp.log" module="MEI.stringtab" type="atts">
    <desc xml:lang="en">Logical domain attributes.</desc>
    <classes>
      <!-- Would that be helpful? <memberOf key="att.articulation"/>-->
      <memberOf key="att.augmentDots"/>
      <memberOf key="att.duration.log"/>
      <memberOf key="att.event"/>
    </classes>
  </classSpec>
  <elementSpec ident="barre" module="MEI.stringtab">
    <desc xml:lang="en">A barre in a chord tablature grid.</desc>
    <classes>
      <memberOf key="att.common"/>
      <memberOf key="att.startEndId"/>
    </classes>
    <content>
      <empty/>
    </content>
    <attList>
      <attDef ident="fret" usage="opt">
        <desc xml:lang="en">This attribute is deprecated in favour of <att>tab.fret</att>, and will be removed in a future version. Records the location at which the strings should be stopped against a fret in a fretboard diagram. This may or may not be the same as the actual location on the fretboard of the instrument in performance.</desc>
        <datatype>
          <rng:data type="positiveInteger">
            <rng:param name="minInclusive">1</rng:param>
            <rng:param name="maxInclusive">5</rng:param>
          </rng:data>
        </datatype>
      </attDef>
    </attList>
    <remarks xml:lang="en">
      <p>The <att>startid</att> and <att>endid</att> attributes are used to indicate the <gi
          scheme="MEI">chordMember</gi> elements on which the barre starts and finishes
        respectively. The fret at which the barre should be created is recorded by the <att>fret</att>
        attribute.</p>
    </remarks>
  </elementSpec>
  <elementSpec ident="course" module="MEI.stringtab">
    <gloss>individual course tuning information</gloss>
    <desc xml:lang="en">Describes the tuning of a course on a stringed instrument (<abbr>e.g.</abbr>, guitar, lute).</desc>
    <classes>
      <memberOf key="att.common"/>
      <memberOf key="att.course.log"/>
      <memberOf key="att.course.vis"/>
      <memberOf key="att.course.ges"/>
      <memberOf key="att.course.anl"/>
      <memberOf key="model.tuningPart"/>
    </classes>
    <content>
      <rng:zeroOrMore>
        <rng:ref name="string"/>
      </rng:zeroOrMore>
    </content>
  </elementSpec>
  <elementSpec ident="string" module="MEI.stringtab">
    <gloss>individual string tuning information</gloss>
    <desc xml:lang="en">Used to modify tuning information given by the course element. Describes the tuning of an individual string within a course on a stringed instrument (<abbr>e.g.</abbr>, guitar, lute).</desc>
    <classes>
      <memberOf key="att.common"/>
      <memberOf key="att.course.log"/>
      <memberOf key="att.course.vis"/>
      <memberOf key="att.course.ges"/>
      <memberOf key="att.course.anl"/>
    </classes>
    <content>
      <rng:zeroOrMore>
        <rng:ref name="string"/>
      </rng:zeroOrMore>
    </content>
  </elementSpec>
  <elementSpec ident="tabDurSym" module="MEI.stringtab">
    <desc xml:lang="en">A visual indication of the duration of a <gi scheme="MEI">tabGrp</gi>.</desc>
    <classes>
      <memberOf key="att.common"/>
      <memberOf key="att.facsimile"/>
      <memberOf key="att.stringtab"/>
      <memberOf key="att.tabDurSym.log"/>
      <memberOf key="att.tabDurSym.vis"/>
      <memberOf key="att.tabDurSym.ges"/>
      <memberOf key="att.tabDurSym.anl"/>
    </classes>
    <content>
      <empty/>
    </content>
    <!-- TODO Add constraint: note(s) and rest(s) should be mutually exclusive -->
    <remarks xml:lang="en">
      <p>The presence of a <gi scheme="MEI">tabDurSym</gi> indicates that there is a symbol rendered for the parent <gi scheme="MEI">tabGrp</gi>. If no additional attributes like <att>altsym</att>are given, a default symbol conforming to the current notation style or font is to be used. The absence of this elements indicates that the last provided duration symbol equally applies to the current tab group.</p>
    </remarks>
  </elementSpec>
  <elementSpec ident="tabGrp" module="MEI.stringtab">
    <desc xml:lang="en">A group of simultaneous tab notes, comparable to a <gi scheme="MEI">chord</gi> in CMN. Rarely, may also contain rests, as in some "German" lute tablatures.</desc>
    <classes>
      <memberOf key="att.common"/>
      <memberOf key="att.facsimile"/>
      <memberOf key="att.tabGrp.log"/>
      <memberOf key="att.tabGrp.vis"/>
      <memberOf key="att.tabGrp.ges"/>
      <memberOf key="att.tabGrp.anl"/>
      <memberOf key="model.eventLike"/>
    </classes>
    <content>
      <rng:optional>
        <rng:ref name="tabDurSym"/>
      </rng:optional>
      <rng:zeroOrMore>
        <rng:choice>
          <!-- alternative: model.chordPart â This would give note and artic -->
          <rng:ref name="note"/>
          <rng:ref name="model.transcriptionLike"/>
          <rng:ref name="model.editLike"/>
          <rng:ref name="model.appLike"/>
          <rng:ref name="rest"/>
        </rng:choice>
      </rng:zeroOrMore>
    </content>
  </elementSpec>
</specGrp>